
Boundary.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000e6a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000030  00800060  00000e6a  00000efe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000013  00800090  00800090  00000f2e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000f2e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000058  00000000  00000000  00000f5e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000014af  00000000  00000000  00000fb6  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000265  00000000  00000000  00002465  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000a1f  00000000  00000000  000026ca  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000110  00000000  00000000  000030ec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000286  00000000  00000000  000031fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00001696  00000000  00000000  00003482  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00004b18  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e6       	ldi	r30, 0x6A	; 106
  68:	fe e0       	ldi	r31, 0x0E	; 14
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 39       	cpi	r26, 0x90	; 144
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e9       	ldi	r26, 0x90	; 144
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a3 3a       	cpi	r26, 0xA3	; 163
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 1a 07 	call	0xe34	; 0xe34 <main>
  8a:	0c 94 33 07 	jmp	0xe66	; 0xe66 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <init_control>:
int8_t current_player;
int8_t current_x;
int8_t current_y;

void init_control()
{
  92:	e6 e9       	ldi	r30, 0x96	; 150
  94:	f0 e0       	ldi	r31, 0x00	; 0
  96:	86 ea       	ldi	r24, 0xA6	; 166
  98:	90 e0       	ldi	r25, 0x00	; 0
	int8_t i,j;
	for(i=0;i<4;i++)
	{
		for(j=0;j<4;j++)
		{
			position[i][j]=-1;
  9a:	2f ef       	ldi	r18, 0xFF	; 255
  9c:	df 01       	movw	r26, r30
  9e:	13 97       	sbiw	r26, 0x03	; 3
  a0:	2c 93       	st	X, r18
  a2:	11 96       	adiw	r26, 0x01	; 1
  a4:	2c 93       	st	X, r18
  a6:	11 96       	adiw	r26, 0x01	; 1
  a8:	2c 93       	st	X, r18
  aa:	20 83       	st	Z, r18
  ac:	34 96       	adiw	r30, 0x04	; 4
int8_t current_y;

void init_control()
{
	int8_t i,j;
	for(i=0;i<4;i++)
  ae:	e8 17       	cp	r30, r24
  b0:	f9 07       	cpc	r31, r25
  b2:	a1 f7       	brne	.-24     	; 0x9c <init_control+0xa>
		{
			position[i][j]=-1;
		}
	}
	
	current_player = 1;
  b4:	81 e0       	ldi	r24, 0x01	; 1
  b6:	80 93 92 00 	sts	0x0092, r24
	current_x = 2;
  ba:	82 e0       	ldi	r24, 0x02	; 2
  bc:	80 93 90 00 	sts	0x0090, r24
	current_y = 2;
  c0:	80 93 91 00 	sts	0x0091, r24
  c4:	08 95       	ret

000000c6 <draw_boundary>:
		}
	}
}

void draw_boundary()
{
  c6:	cf 93       	push	r28
  c8:	df 93       	push	r29
  ca:	e0 e8       	ldi	r30, 0x80	; 128
  cc:	f0 e0       	ldi	r31, 0x00	; 0
  ce:	c0 e7       	ldi	r28, 0x70	; 112
  d0:	d0 e0       	ldi	r29, 0x00	; 0
  d2:	a0 e6       	ldi	r26, 0x60	; 96
  d4:	b0 e0       	ldi	r27, 0x00	; 0
  d6:	80 e9       	ldi	r24, 0x90	; 144
  d8:	90 e0       	ldi	r25, 0x00	; 0
	int8_t i;
	for(i=0;i<16;i++)
	{
		PORTD = col_R[i];
  da:	21 91       	ld	r18, Z+
  dc:	22 bb       	out	0x12, r18	; 18
		
		PORTB = 0x00;
  de:	18 ba       	out	0x18, r1	; 24
		PORTA = boundary_port_a[i];
  e0:	29 91       	ld	r18, Y+
  e2:	2b bb       	out	0x1b, r18	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  e4:	26 ea       	ldi	r18, 0xA6	; 166
  e6:	2a 95       	dec	r18
  e8:	f1 f7       	brne	.-4      	; 0xe6 <draw_boundary+0x20>
  ea:	00 c0       	rjmp	.+0      	; 0xec <draw_boundary+0x26>
		_delay_ms(0.5);
		
		PORTA = 0x00;
  ec:	1b ba       	out	0x1b, r1	; 27
		PORTB = boundary_port_b[i];
  ee:	2d 91       	ld	r18, X+
  f0:	28 bb       	out	0x18, r18	; 24
  f2:	26 ea       	ldi	r18, 0xA6	; 166
  f4:	2a 95       	dec	r18
  f6:	f1 f7       	brne	.-4      	; 0xf4 <draw_boundary+0x2e>
  f8:	00 c0       	rjmp	.+0      	; 0xfa <draw_boundary+0x34>
}

void draw_boundary()
{
	int8_t i;
	for(i=0;i<16;i++)
  fa:	e8 17       	cp	r30, r24
  fc:	f9 07       	cpc	r31, r25
  fe:	69 f7       	brne	.-38     	; 0xda <draw_boundary+0x14>
		
		PORTA = 0x00;
		PORTB = boundary_port_b[i];
		_delay_ms(0.5);
	}
}
 100:	df 91       	pop	r29
 102:	cf 91       	pop	r28
 104:	08 95       	ret

00000106 <draw_p1_pattern>:

void draw_p1_pattern(int8_t x,int8_t y)
{
 106:	cf 93       	push	r28
 108:	df 93       	push	r29
 10a:	cd b7       	in	r28, 0x3d	; 61
 10c:	de b7       	in	r29, 0x3e	; 62
 10e:	2c 97       	sbiw	r28, 0x0c	; 12
 110:	0f b6       	in	r0, 0x3f	; 63
 112:	f8 94       	cli
 114:	de bf       	out	0x3e, r29	; 62
 116:	0f be       	out	0x3f, r0	; 63
 118:	cd bf       	out	0x3d, r28	; 61
	int8_t temp_col[4];
	
	int8_t i;
	
	if(x==1 && y==1)
 11a:	81 30       	cpi	r24, 0x01	; 1
 11c:	31 f5       	brne	.+76     	; 0x16a <draw_p1_pattern+0x64>
 11e:	61 30       	cpi	r22, 0x01	; 1
 120:	09 f0       	breq	.+2      	; 0x124 <draw_p1_pattern+0x1e>
 122:	86 c0       	rjmp	.+268    	; 0x230 <draw_p1_pattern+0x12a>
	{
		
		temp_col[0]=col_R[1];
 124:	80 91 81 00 	lds	r24, 0x0081
 128:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
 12a:	80 91 82 00 	lds	r24, 0x0082
 12e:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
 130:	80 91 83 00 	lds	r24, 0x0083
 134:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
 136:	80 91 84 00 	lds	r24, 0x0084
 13a:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 13c:	1d 82       	std	Y+5, r1	; 0x05
 13e:	80 e3       	ldi	r24, 0x30	; 48
 140:	8e 83       	std	Y+6, r24	; 0x06
 142:	8f 83       	std	Y+7, r24	; 0x07
 144:	18 86       	std	Y+8, r1	; 0x08
 146:	fe 01       	movw	r30, r28
 148:	31 96       	adiw	r30, 0x01	; 1
 14a:	de 01       	movw	r26, r28
 14c:	15 96       	adiw	r26, 0x05	; 5
 14e:	cd 01       	movw	r24, r26
			0x00,0x30,0x30,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 150:	21 91       	ld	r18, Z+
 152:	22 bb       	out	0x12, r18	; 18
			
			PORTB = 0x00;
 154:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 156:	2d 91       	ld	r18, X+
 158:	2b bb       	out	0x1b, r18	; 27
 15a:	23 e5       	ldi	r18, 0x53	; 83
 15c:	2a 95       	dec	r18
 15e:	f1 f7       	brne	.-4      	; 0x15c <draw_p1_pattern+0x56>
 160:	00 00       	nop
		
		int8_t port_a_temp_pattern[]={
			0x00,0x30,0x30,0x00
		};
		
		for(i=0;i<4;i++)
 162:	e8 17       	cp	r30, r24
 164:	f9 07       	cpc	r31, r25
 166:	a1 f7       	brne	.-24     	; 0x150 <draw_p1_pattern+0x4a>
 168:	77 c1       	rjmp	.+750    	; 0x458 <draw_p1_pattern+0x352>
			PORTB = 0x00;
			PORTA = port_a_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	else if(x==2 && y==1)
 16a:	82 30       	cpi	r24, 0x02	; 2
 16c:	c9 f5       	brne	.+114    	; 0x1e0 <draw_p1_pattern+0xda>
 16e:	61 30       	cpi	r22, 0x01	; 1
 170:	09 f0       	breq	.+2      	; 0x174 <draw_p1_pattern+0x6e>
 172:	86 c0       	rjmp	.+268    	; 0x280 <draw_p1_pattern+0x17a>
	{
		
		temp_col[0]=col_R[1];
 174:	80 91 81 00 	lds	r24, 0x0081
 178:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
 17a:	80 91 82 00 	lds	r24, 0x0082
 17e:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
 180:	80 91 83 00 	lds	r24, 0x0083
 184:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
 186:	80 91 84 00 	lds	r24, 0x0084
 18a:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 18c:	19 86       	std	Y+9, r1	; 0x09
 18e:	81 e0       	ldi	r24, 0x01	; 1
 190:	8a 87       	std	Y+10, r24	; 0x0a
 192:	8b 87       	std	Y+11, r24	; 0x0b
 194:	1c 86       	std	Y+12, r1	; 0x0c
			0x00,0x01,0x01,0x00
		};
		
		int8_t port_b_temp_pattern[]={
 196:	1d 82       	std	Y+5, r1	; 0x05
 198:	80 e8       	ldi	r24, 0x80	; 128
 19a:	8e 83       	std	Y+6, r24	; 0x06
 19c:	8f 83       	std	Y+7, r24	; 0x07
 19e:	18 86       	std	Y+8, r1	; 0x08
 1a0:	fe 01       	movw	r30, r28
 1a2:	31 96       	adiw	r30, 0x01	; 1
 1a4:	ce 01       	movw	r24, r28
 1a6:	09 96       	adiw	r24, 0x09	; 9
 1a8:	be 01       	movw	r22, r28
 1aa:	6b 5f       	subi	r22, 0xFB	; 251
 1ac:	7f 4f       	sbci	r23, 0xFF	; 255
 1ae:	9b 01       	movw	r18, r22
			0x00,0x80,0x80,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 1b0:	41 91       	ld	r20, Z+
 1b2:	42 bb       	out	0x12, r20	; 18
			
			PORTB = 0x00;
 1b4:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 1b6:	dc 01       	movw	r26, r24
 1b8:	4d 91       	ld	r20, X+
 1ba:	cd 01       	movw	r24, r26
 1bc:	4b bb       	out	0x1b, r20	; 27
 1be:	b3 e5       	ldi	r27, 0x53	; 83
 1c0:	ba 95       	dec	r27
 1c2:	f1 f7       	brne	.-4      	; 0x1c0 <draw_p1_pattern+0xba>
 1c4:	00 00       	nop
			_delay_ms(0.25);
			
			PORTA = 0x00;
 1c6:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 1c8:	db 01       	movw	r26, r22
 1ca:	4d 91       	ld	r20, X+
 1cc:	bd 01       	movw	r22, r26
 1ce:	48 bb       	out	0x18, r20	; 24
 1d0:	b3 e5       	ldi	r27, 0x53	; 83
 1d2:	ba 95       	dec	r27
 1d4:	f1 f7       	brne	.-4      	; 0x1d2 <draw_p1_pattern+0xcc>
 1d6:	00 00       	nop
		
		int8_t port_b_temp_pattern[]={
			0x00,0x80,0x80,0x00
		};
		
		for(i=0;i<4;i++)
 1d8:	e2 17       	cp	r30, r18
 1da:	f3 07       	cpc	r31, r19
 1dc:	49 f7       	brne	.-46     	; 0x1b0 <draw_p1_pattern+0xaa>
 1de:	3c c1       	rjmp	.+632    	; 0x458 <draw_p1_pattern+0x352>
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
			
		}
	}
	else if(x==3 && y==1)
 1e0:	83 30       	cpi	r24, 0x03	; 3
 1e2:	31 f5       	brne	.+76     	; 0x230 <draw_p1_pattern+0x12a>
 1e4:	61 30       	cpi	r22, 0x01	; 1
 1e6:	09 f0       	breq	.+2      	; 0x1ea <draw_p1_pattern+0xe4>
 1e8:	86 c0       	rjmp	.+268    	; 0x2f6 <draw_p1_pattern+0x1f0>
	{
		temp_col[0]=col_R[1];
 1ea:	80 91 81 00 	lds	r24, 0x0081
 1ee:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
 1f0:	80 91 82 00 	lds	r24, 0x0082
 1f4:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
 1f6:	80 91 83 00 	lds	r24, 0x0083
 1fa:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
 1fc:	80 91 84 00 	lds	r24, 0x0084
 200:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_b_temp_pattern[]={
 202:	1d 82       	std	Y+5, r1	; 0x05
 204:	8c e0       	ldi	r24, 0x0C	; 12
 206:	8e 83       	std	Y+6, r24	; 0x06
 208:	8f 83       	std	Y+7, r24	; 0x07
 20a:	18 86       	std	Y+8, r1	; 0x08
 20c:	fe 01       	movw	r30, r28
 20e:	31 96       	adiw	r30, 0x01	; 1
 210:	de 01       	movw	r26, r28
 212:	15 96       	adiw	r26, 0x05	; 5
 214:	cd 01       	movw	r24, r26
		};
		
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 216:	21 91       	ld	r18, Z+
 218:	22 bb       	out	0x12, r18	; 18
			
			PORTA = 0x00;
 21a:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 21c:	2d 91       	ld	r18, X+
 21e:	28 bb       	out	0x18, r18	; 24
 220:	23 e5       	ldi	r18, 0x53	; 83
 222:	2a 95       	dec	r18
 224:	f1 f7       	brne	.-4      	; 0x222 <draw_p1_pattern+0x11c>
 226:	00 00       	nop
		int8_t port_b_temp_pattern[]={
			0x00,0x0C,0x0C,0x00
		};
		
		
		for(i=0;i<4;i++)
 228:	e8 17       	cp	r30, r24
 22a:	f9 07       	cpc	r31, r25
 22c:	a1 f7       	brne	.-24     	; 0x216 <draw_p1_pattern+0x110>
 22e:	14 c1       	rjmp	.+552    	; 0x458 <draw_p1_pattern+0x352>
			
		}
	}
	
	
	else if(x==1 && y==2)
 230:	81 30       	cpi	r24, 0x01	; 1
 232:	31 f5       	brne	.+76     	; 0x280 <draw_p1_pattern+0x17a>
 234:	62 30       	cpi	r22, 0x02	; 2
 236:	09 f0       	breq	.+2      	; 0x23a <draw_p1_pattern+0x134>
 238:	86 c0       	rjmp	.+268    	; 0x346 <draw_p1_pattern+0x240>
	{
		temp_col[0]=col_R[6];
 23a:	80 91 86 00 	lds	r24, 0x0086
 23e:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[7];
 240:	80 91 87 00 	lds	r24, 0x0087
 244:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[8];
 246:	80 91 88 00 	lds	r24, 0x0088
 24a:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[9];
 24c:	80 91 89 00 	lds	r24, 0x0089
 250:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 252:	1d 82       	std	Y+5, r1	; 0x05
 254:	80 e3       	ldi	r24, 0x30	; 48
 256:	8e 83       	std	Y+6, r24	; 0x06
 258:	8f 83       	std	Y+7, r24	; 0x07
 25a:	18 86       	std	Y+8, r1	; 0x08
 25c:	fe 01       	movw	r30, r28
 25e:	31 96       	adiw	r30, 0x01	; 1
 260:	de 01       	movw	r26, r28
 262:	15 96       	adiw	r26, 0x05	; 5
 264:	cd 01       	movw	r24, r26
			0x00,0x30,0x30,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 266:	21 91       	ld	r18, Z+
 268:	22 bb       	out	0x12, r18	; 18
			
			PORTB = 0x00;
 26a:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 26c:	2d 91       	ld	r18, X+
 26e:	2b bb       	out	0x1b, r18	; 27
 270:	43 e5       	ldi	r20, 0x53	; 83
 272:	4a 95       	dec	r20
 274:	f1 f7       	brne	.-4      	; 0x272 <draw_p1_pattern+0x16c>
 276:	00 00       	nop
		
		int8_t port_a_temp_pattern[]={
			0x00,0x30,0x30,0x00
		};
		
		for(i=0;i<4;i++)
 278:	e8 17       	cp	r30, r24
 27a:	f9 07       	cpc	r31, r25
 27c:	a1 f7       	brne	.-24     	; 0x266 <draw_p1_pattern+0x160>
 27e:	ec c0       	rjmp	.+472    	; 0x458 <draw_p1_pattern+0x352>
			PORTB = 0x00;
			PORTA = port_a_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	else if(x==2 && y==2)
 280:	82 30       	cpi	r24, 0x02	; 2
 282:	c9 f5       	brne	.+114    	; 0x2f6 <draw_p1_pattern+0x1f0>
 284:	62 30       	cpi	r22, 0x02	; 2
 286:	09 f0       	breq	.+2      	; 0x28a <draw_p1_pattern+0x184>
 288:	86 c0       	rjmp	.+268    	; 0x396 <draw_p1_pattern+0x290>
	{
		temp_col[0]=col_R[6];
 28a:	80 91 86 00 	lds	r24, 0x0086
 28e:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[7];
 290:	80 91 87 00 	lds	r24, 0x0087
 294:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[8];
 296:	80 91 88 00 	lds	r24, 0x0088
 29a:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[9];
 29c:	80 91 89 00 	lds	r24, 0x0089
 2a0:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 2a2:	19 86       	std	Y+9, r1	; 0x09
 2a4:	81 e0       	ldi	r24, 0x01	; 1
 2a6:	8a 87       	std	Y+10, r24	; 0x0a
 2a8:	8b 87       	std	Y+11, r24	; 0x0b
 2aa:	1c 86       	std	Y+12, r1	; 0x0c
			0x00,0x01,0x01,0x00
		};
		
		int8_t port_b_temp_pattern[]={
 2ac:	1d 82       	std	Y+5, r1	; 0x05
 2ae:	80 e8       	ldi	r24, 0x80	; 128
 2b0:	8e 83       	std	Y+6, r24	; 0x06
 2b2:	8f 83       	std	Y+7, r24	; 0x07
 2b4:	18 86       	std	Y+8, r1	; 0x08
 2b6:	fe 01       	movw	r30, r28
 2b8:	31 96       	adiw	r30, 0x01	; 1
 2ba:	ce 01       	movw	r24, r28
 2bc:	09 96       	adiw	r24, 0x09	; 9
 2be:	be 01       	movw	r22, r28
 2c0:	6b 5f       	subi	r22, 0xFB	; 251
 2c2:	7f 4f       	sbci	r23, 0xFF	; 255
 2c4:	9b 01       	movw	r18, r22
			0x00,0x80,0x80,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 2c6:	41 91       	ld	r20, Z+
 2c8:	42 bb       	out	0x12, r20	; 18
			
			PORTB = 0x00;
 2ca:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 2cc:	dc 01       	movw	r26, r24
 2ce:	4d 91       	ld	r20, X+
 2d0:	cd 01       	movw	r24, r26
 2d2:	4b bb       	out	0x1b, r20	; 27
 2d4:	b3 e5       	ldi	r27, 0x53	; 83
 2d6:	ba 95       	dec	r27
 2d8:	f1 f7       	brne	.-4      	; 0x2d6 <draw_p1_pattern+0x1d0>
 2da:	00 00       	nop
			_delay_ms(0.25);
			
			PORTA = 0x00;
 2dc:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 2de:	db 01       	movw	r26, r22
 2e0:	4d 91       	ld	r20, X+
 2e2:	bd 01       	movw	r22, r26
 2e4:	48 bb       	out	0x18, r20	; 24
 2e6:	b3 e5       	ldi	r27, 0x53	; 83
 2e8:	ba 95       	dec	r27
 2ea:	f1 f7       	brne	.-4      	; 0x2e8 <draw_p1_pattern+0x1e2>
 2ec:	00 00       	nop
		
		int8_t port_b_temp_pattern[]={
			0x00,0x80,0x80,0x00
		};
		
		for(i=0;i<4;i++)
 2ee:	e2 17       	cp	r30, r18
 2f0:	f3 07       	cpc	r31, r19
 2f2:	49 f7       	brne	.-46     	; 0x2c6 <draw_p1_pattern+0x1c0>
 2f4:	b1 c0       	rjmp	.+354    	; 0x458 <draw_p1_pattern+0x352>
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
			
		}
	}
	else if(x==3 && y==2)
 2f6:	83 30       	cpi	r24, 0x03	; 3
 2f8:	31 f5       	brne	.+76     	; 0x346 <draw_p1_pattern+0x240>
 2fa:	62 30       	cpi	r22, 0x02	; 2
 2fc:	09 f0       	breq	.+2      	; 0x300 <draw_p1_pattern+0x1fa>
 2fe:	86 c0       	rjmp	.+268    	; 0x40c <draw_p1_pattern+0x306>
	{
		temp_col[0]=col_R[6];
 300:	80 91 86 00 	lds	r24, 0x0086
 304:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[7];
 306:	80 91 87 00 	lds	r24, 0x0087
 30a:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[8];
 30c:	80 91 88 00 	lds	r24, 0x0088
 310:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[9];
 312:	80 91 89 00 	lds	r24, 0x0089
 316:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_b_temp_pattern[]={
 318:	1d 82       	std	Y+5, r1	; 0x05
 31a:	8c e0       	ldi	r24, 0x0C	; 12
 31c:	8e 83       	std	Y+6, r24	; 0x06
 31e:	8f 83       	std	Y+7, r24	; 0x07
 320:	18 86       	std	Y+8, r1	; 0x08
 322:	fe 01       	movw	r30, r28
 324:	31 96       	adiw	r30, 0x01	; 1
 326:	de 01       	movw	r26, r28
 328:	15 96       	adiw	r26, 0x05	; 5
 32a:	cd 01       	movw	r24, r26
		};
		
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 32c:	21 91       	ld	r18, Z+
 32e:	22 bb       	out	0x12, r18	; 18
			
			PORTA = 0x00;
 330:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 332:	2d 91       	ld	r18, X+
 334:	28 bb       	out	0x18, r18	; 24
 336:	23 e5       	ldi	r18, 0x53	; 83
 338:	2a 95       	dec	r18
 33a:	f1 f7       	brne	.-4      	; 0x338 <draw_p1_pattern+0x232>
 33c:	00 00       	nop
		int8_t port_b_temp_pattern[]={
			0x00,0x0C,0x0C,0x00
		};
		
		
		for(i=0;i<4;i++)
 33e:	e8 17       	cp	r30, r24
 340:	f9 07       	cpc	r31, r25
 342:	a1 f7       	brne	.-24     	; 0x32c <draw_p1_pattern+0x226>
 344:	89 c0       	rjmp	.+274    	; 0x458 <draw_p1_pattern+0x352>
			
		}
	}
	
	
	else if(x==1 && y==3)
 346:	81 30       	cpi	r24, 0x01	; 1
 348:	31 f5       	brne	.+76     	; 0x396 <draw_p1_pattern+0x290>
 34a:	63 30       	cpi	r22, 0x03	; 3
 34c:	09 f0       	breq	.+2      	; 0x350 <draw_p1_pattern+0x24a>
 34e:	84 c0       	rjmp	.+264    	; 0x458 <draw_p1_pattern+0x352>
	{
		temp_col[0]=col_R[11];
 350:	80 91 8b 00 	lds	r24, 0x008B
 354:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[12];
 356:	80 91 8c 00 	lds	r24, 0x008C
 35a:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[13];
 35c:	80 91 8d 00 	lds	r24, 0x008D
 360:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[14];
 362:	80 91 8e 00 	lds	r24, 0x008E
 366:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 368:	1d 82       	std	Y+5, r1	; 0x05
 36a:	80 e3       	ldi	r24, 0x30	; 48
 36c:	8e 83       	std	Y+6, r24	; 0x06
 36e:	8f 83       	std	Y+7, r24	; 0x07
 370:	18 86       	std	Y+8, r1	; 0x08
 372:	fe 01       	movw	r30, r28
 374:	31 96       	adiw	r30, 0x01	; 1
 376:	de 01       	movw	r26, r28
 378:	15 96       	adiw	r26, 0x05	; 5
 37a:	cd 01       	movw	r24, r26
			0x00,0x30,0x30,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 37c:	21 91       	ld	r18, Z+
 37e:	22 bb       	out	0x12, r18	; 18
			
			PORTB = 0x00;
 380:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 382:	2d 91       	ld	r18, X+
 384:	2b bb       	out	0x1b, r18	; 27
 386:	43 e5       	ldi	r20, 0x53	; 83
 388:	4a 95       	dec	r20
 38a:	f1 f7       	brne	.-4      	; 0x388 <draw_p1_pattern+0x282>
 38c:	00 00       	nop
		
		int8_t port_a_temp_pattern[]={
			0x00,0x30,0x30,0x00
		};
		
		for(i=0;i<4;i++)
 38e:	e8 17       	cp	r30, r24
 390:	f9 07       	cpc	r31, r25
 392:	a1 f7       	brne	.-24     	; 0x37c <draw_p1_pattern+0x276>
 394:	61 c0       	rjmp	.+194    	; 0x458 <draw_p1_pattern+0x352>
			PORTB = 0x00;
			PORTA = port_a_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	else if(x==2 && y==3)
 396:	82 30       	cpi	r24, 0x02	; 2
 398:	c9 f5       	brne	.+114    	; 0x40c <draw_p1_pattern+0x306>
 39a:	63 30       	cpi	r22, 0x03	; 3
 39c:	09 f0       	breq	.+2      	; 0x3a0 <draw_p1_pattern+0x29a>
 39e:	5c c0       	rjmp	.+184    	; 0x458 <draw_p1_pattern+0x352>
	{
		temp_col[0]=col_R[11];
 3a0:	80 91 8b 00 	lds	r24, 0x008B
 3a4:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[12];
 3a6:	80 91 8c 00 	lds	r24, 0x008C
 3aa:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[13];
 3ac:	80 91 8d 00 	lds	r24, 0x008D
 3b0:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[14];
 3b2:	80 91 8e 00 	lds	r24, 0x008E
 3b6:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 3b8:	19 86       	std	Y+9, r1	; 0x09
 3ba:	81 e0       	ldi	r24, 0x01	; 1
 3bc:	8a 87       	std	Y+10, r24	; 0x0a
 3be:	8b 87       	std	Y+11, r24	; 0x0b
 3c0:	1c 86       	std	Y+12, r1	; 0x0c
			0x00,0x01,0x01,0x00
		};
		
		int8_t port_b_temp_pattern[]={
 3c2:	1d 82       	std	Y+5, r1	; 0x05
 3c4:	80 e8       	ldi	r24, 0x80	; 128
 3c6:	8e 83       	std	Y+6, r24	; 0x06
 3c8:	8f 83       	std	Y+7, r24	; 0x07
 3ca:	18 86       	std	Y+8, r1	; 0x08
 3cc:	fe 01       	movw	r30, r28
 3ce:	31 96       	adiw	r30, 0x01	; 1
 3d0:	ce 01       	movw	r24, r28
 3d2:	09 96       	adiw	r24, 0x09	; 9
 3d4:	be 01       	movw	r22, r28
 3d6:	6b 5f       	subi	r22, 0xFB	; 251
 3d8:	7f 4f       	sbci	r23, 0xFF	; 255
 3da:	9b 01       	movw	r18, r22
			0x00,0x80,0x80,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 3dc:	41 91       	ld	r20, Z+
 3de:	42 bb       	out	0x12, r20	; 18
			
			PORTB = 0x00;
 3e0:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 3e2:	dc 01       	movw	r26, r24
 3e4:	4d 91       	ld	r20, X+
 3e6:	cd 01       	movw	r24, r26
 3e8:	4b bb       	out	0x1b, r20	; 27
 3ea:	b3 e5       	ldi	r27, 0x53	; 83
 3ec:	ba 95       	dec	r27
 3ee:	f1 f7       	brne	.-4      	; 0x3ec <draw_p1_pattern+0x2e6>
 3f0:	00 00       	nop
			_delay_ms(0.25);
			
			PORTA = 0x00;
 3f2:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 3f4:	db 01       	movw	r26, r22
 3f6:	4d 91       	ld	r20, X+
 3f8:	bd 01       	movw	r22, r26
 3fa:	48 bb       	out	0x18, r20	; 24
 3fc:	b3 e5       	ldi	r27, 0x53	; 83
 3fe:	ba 95       	dec	r27
 400:	f1 f7       	brne	.-4      	; 0x3fe <draw_p1_pattern+0x2f8>
 402:	00 00       	nop
		
		int8_t port_b_temp_pattern[]={
			0x00,0x80,0x80,0x00
		};
		
		for(i=0;i<4;i++)
 404:	e2 17       	cp	r30, r18
 406:	f3 07       	cpc	r31, r19
 408:	49 f7       	brne	.-46     	; 0x3dc <draw_p1_pattern+0x2d6>
 40a:	26 c0       	rjmp	.+76     	; 0x458 <draw_p1_pattern+0x352>
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
			
		}
	}
	else if(x==3 && y==3)
 40c:	83 30       	cpi	r24, 0x03	; 3
 40e:	21 f5       	brne	.+72     	; 0x458 <draw_p1_pattern+0x352>
 410:	63 30       	cpi	r22, 0x03	; 3
 412:	11 f5       	brne	.+68     	; 0x458 <draw_p1_pattern+0x352>
	{
		temp_col[0]=col_R[11];
 414:	80 91 8b 00 	lds	r24, 0x008B
 418:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[12];
 41a:	80 91 8c 00 	lds	r24, 0x008C
 41e:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[13];
 420:	80 91 8d 00 	lds	r24, 0x008D
 424:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[14];
 426:	80 91 8e 00 	lds	r24, 0x008E
 42a:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_b_temp_pattern[]={
 42c:	1d 82       	std	Y+5, r1	; 0x05
 42e:	8c e0       	ldi	r24, 0x0C	; 12
 430:	8e 83       	std	Y+6, r24	; 0x06
 432:	8f 83       	std	Y+7, r24	; 0x07
 434:	18 86       	std	Y+8, r1	; 0x08
 436:	fe 01       	movw	r30, r28
 438:	31 96       	adiw	r30, 0x01	; 1
 43a:	de 01       	movw	r26, r28
 43c:	15 96       	adiw	r26, 0x05	; 5
 43e:	cd 01       	movw	r24, r26
		};
		
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 440:	21 91       	ld	r18, Z+
 442:	22 bb       	out	0x12, r18	; 18
			
			PORTA = 0x00;
 444:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 446:	2d 91       	ld	r18, X+
 448:	28 bb       	out	0x18, r18	; 24
 44a:	23 e5       	ldi	r18, 0x53	; 83
 44c:	2a 95       	dec	r18
 44e:	f1 f7       	brne	.-4      	; 0x44c <draw_p1_pattern+0x346>
 450:	00 00       	nop
		int8_t port_b_temp_pattern[]={
			0x00,0x0C,0x0C,0x00
		};
		
		
		for(i=0;i<4;i++)
 452:	e8 17       	cp	r30, r24
 454:	f9 07       	cpc	r31, r25
 456:	a1 f7       	brne	.-24     	; 0x440 <draw_p1_pattern+0x33a>
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
			
		}
	}
}
 458:	2c 96       	adiw	r28, 0x0c	; 12
 45a:	0f b6       	in	r0, 0x3f	; 63
 45c:	f8 94       	cli
 45e:	de bf       	out	0x3e, r29	; 62
 460:	0f be       	out	0x3f, r0	; 63
 462:	cd bf       	out	0x3d, r28	; 61
 464:	df 91       	pop	r29
 466:	cf 91       	pop	r28
 468:	08 95       	ret

0000046a <draw_p2_pattern>:

void draw_p2_pattern(int8_t x,int8_t y)
{
 46a:	cf 93       	push	r28
 46c:	df 93       	push	r29
 46e:	cd b7       	in	r28, 0x3d	; 61
 470:	de b7       	in	r29, 0x3e	; 62
 472:	2c 97       	sbiw	r28, 0x0c	; 12
 474:	0f b6       	in	r0, 0x3f	; 63
 476:	f8 94       	cli
 478:	de bf       	out	0x3e, r29	; 62
 47a:	0f be       	out	0x3f, r0	; 63
 47c:	cd bf       	out	0x3d, r28	; 61
	int8_t temp_col[4];
	
	int8_t i;
	
	if(x==1 && y==1)
 47e:	81 30       	cpi	r24, 0x01	; 1
 480:	09 f0       	breq	.+2      	; 0x484 <draw_p2_pattern+0x1a>
 482:	79 c0       	rjmp	.+242    	; 0x576 <draw_p2_pattern+0x10c>
 484:	61 30       	cpi	r22, 0x01	; 1
 486:	31 f5       	brne	.+76     	; 0x4d4 <draw_p2_pattern+0x6a>
	{
		
		temp_col[0]=col_R[1];
 488:	80 91 81 00 	lds	r24, 0x0081
 48c:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
 48e:	80 91 82 00 	lds	r24, 0x0082
 492:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
 494:	80 91 83 00 	lds	r24, 0x0083
 498:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
 49a:	80 91 84 00 	lds	r24, 0x0084
 49e:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 4a0:	88 e0       	ldi	r24, 0x08	; 8
 4a2:	8d 83       	std	Y+5, r24	; 0x05
 4a4:	80 e1       	ldi	r24, 0x10	; 16
 4a6:	8e 83       	std	Y+6, r24	; 0x06
 4a8:	80 e2       	ldi	r24, 0x20	; 32
 4aa:	8f 83       	std	Y+7, r24	; 0x07
 4ac:	80 e4       	ldi	r24, 0x40	; 64
 4ae:	88 87       	std	Y+8, r24	; 0x08
 4b0:	fe 01       	movw	r30, r28
 4b2:	31 96       	adiw	r30, 0x01	; 1
 4b4:	de 01       	movw	r26, r28
 4b6:	15 96       	adiw	r26, 0x05	; 5
 4b8:	cd 01       	movw	r24, r26
			0x08,0x10,0x20,0x40
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 4ba:	21 91       	ld	r18, Z+
 4bc:	22 bb       	out	0x12, r18	; 18
			
			PORTB = 0x00;
 4be:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 4c0:	2d 91       	ld	r18, X+
 4c2:	2b bb       	out	0x1b, r18	; 27
 4c4:	23 e5       	ldi	r18, 0x53	; 83
 4c6:	2a 95       	dec	r18
 4c8:	f1 f7       	brne	.-4      	; 0x4c6 <draw_p2_pattern+0x5c>
 4ca:	00 00       	nop
		
		int8_t port_a_temp_pattern[]={
			0x08,0x10,0x20,0x40
		};
		
		for(i=0;i<4;i++)
 4cc:	e8 17       	cp	r30, r24
 4ce:	f9 07       	cpc	r31, r25
 4d0:	a1 f7       	brne	.-24     	; 0x4ba <draw_p2_pattern+0x50>
 4d2:	7d c1       	rjmp	.+762    	; 0x7ce <draw_p2_pattern+0x364>
			PORTB = 0x00;
			PORTA = port_a_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	else if(x==1 && y==2)
 4d4:	62 30       	cpi	r22, 0x02	; 2
 4d6:	31 f5       	brne	.+76     	; 0x524 <draw_p2_pattern+0xba>
	{
		
		temp_col[0]=col_R[6];
 4d8:	80 91 86 00 	lds	r24, 0x0086
 4dc:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[7];
 4de:	80 91 87 00 	lds	r24, 0x0087
 4e2:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[8];
 4e4:	80 91 88 00 	lds	r24, 0x0088
 4e8:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[9];
 4ea:	80 91 89 00 	lds	r24, 0x0089
 4ee:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 4f0:	88 e0       	ldi	r24, 0x08	; 8
 4f2:	8d 83       	std	Y+5, r24	; 0x05
 4f4:	80 e1       	ldi	r24, 0x10	; 16
 4f6:	8e 83       	std	Y+6, r24	; 0x06
 4f8:	80 e2       	ldi	r24, 0x20	; 32
 4fa:	8f 83       	std	Y+7, r24	; 0x07
 4fc:	80 e4       	ldi	r24, 0x40	; 64
 4fe:	88 87       	std	Y+8, r24	; 0x08
 500:	fe 01       	movw	r30, r28
 502:	31 96       	adiw	r30, 0x01	; 1
 504:	de 01       	movw	r26, r28
 506:	15 96       	adiw	r26, 0x05	; 5
 508:	cd 01       	movw	r24, r26
			0x08,0x10,0x20,0x40
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 50a:	21 91       	ld	r18, Z+
 50c:	22 bb       	out	0x12, r18	; 18
			
			PORTB = 0x00;
 50e:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 510:	2d 91       	ld	r18, X+
 512:	2b bb       	out	0x1b, r18	; 27
 514:	43 e5       	ldi	r20, 0x53	; 83
 516:	4a 95       	dec	r20
 518:	f1 f7       	brne	.-4      	; 0x516 <draw_p2_pattern+0xac>
 51a:	00 00       	nop
		
		int8_t port_a_temp_pattern[]={
			0x08,0x10,0x20,0x40
		};
		
		for(i=0;i<4;i++)
 51c:	e8 17       	cp	r30, r24
 51e:	f9 07       	cpc	r31, r25
 520:	a1 f7       	brne	.-24     	; 0x50a <draw_p2_pattern+0xa0>
 522:	55 c1       	rjmp	.+682    	; 0x7ce <draw_p2_pattern+0x364>
			PORTB = 0x00;
			PORTA = port_a_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	else if(x==1 && y==3)
 524:	63 30       	cpi	r22, 0x03	; 3
 526:	09 f0       	breq	.+2      	; 0x52a <draw_p2_pattern+0xc0>
 528:	52 c1       	rjmp	.+676    	; 0x7ce <draw_p2_pattern+0x364>
	{
		
		temp_col[0]=col_R[11];
 52a:	80 91 8b 00 	lds	r24, 0x008B
 52e:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[12];
 530:	80 91 8c 00 	lds	r24, 0x008C
 534:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[13];
 536:	80 91 8d 00 	lds	r24, 0x008D
 53a:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[14];
 53c:	80 91 8e 00 	lds	r24, 0x008E
 540:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 542:	88 e0       	ldi	r24, 0x08	; 8
 544:	8d 83       	std	Y+5, r24	; 0x05
 546:	80 e1       	ldi	r24, 0x10	; 16
 548:	8e 83       	std	Y+6, r24	; 0x06
 54a:	80 e2       	ldi	r24, 0x20	; 32
 54c:	8f 83       	std	Y+7, r24	; 0x07
 54e:	80 e4       	ldi	r24, 0x40	; 64
 550:	88 87       	std	Y+8, r24	; 0x08
 552:	fe 01       	movw	r30, r28
 554:	31 96       	adiw	r30, 0x01	; 1
 556:	de 01       	movw	r26, r28
 558:	15 96       	adiw	r26, 0x05	; 5
 55a:	cd 01       	movw	r24, r26
			0x08,0x10,0x20,0x40
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 55c:	21 91       	ld	r18, Z+
 55e:	22 bb       	out	0x12, r18	; 18
			
			PORTB = 0x00;
 560:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 562:	2d 91       	ld	r18, X+
 564:	2b bb       	out	0x1b, r18	; 27
 566:	23 e5       	ldi	r18, 0x53	; 83
 568:	2a 95       	dec	r18
 56a:	f1 f7       	brne	.-4      	; 0x568 <draw_p2_pattern+0xfe>
 56c:	00 00       	nop
		
		int8_t port_a_temp_pattern[]={
			0x08,0x10,0x20,0x40
		};
		
		for(i=0;i<4;i++)
 56e:	e8 17       	cp	r30, r24
 570:	f9 07       	cpc	r31, r25
 572:	a1 f7       	brne	.-24     	; 0x55c <draw_p2_pattern+0xf2>
 574:	2c c1       	rjmp	.+600    	; 0x7ce <draw_p2_pattern+0x364>
			PORTB = 0x00;
			PORTA = port_a_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	else if(x==2 && y==1)
 576:	82 30       	cpi	r24, 0x02	; 2
 578:	09 f0       	breq	.+2      	; 0x57c <draw_p2_pattern+0x112>
 57a:	af c0       	rjmp	.+350    	; 0x6da <draw_p2_pattern+0x270>
 57c:	61 30       	cpi	r22, 0x01	; 1
 57e:	c1 f5       	brne	.+112    	; 0x5f0 <draw_p2_pattern+0x186>
	{
		
		temp_col[0]=col_R[1];
 580:	80 91 81 00 	lds	r24, 0x0081
 584:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
 586:	80 91 82 00 	lds	r24, 0x0082
 58a:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
 58c:	80 91 83 00 	lds	r24, 0x0083
 590:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
 592:	80 91 84 00 	lds	r24, 0x0084
 596:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 598:	19 86       	std	Y+9, r1	; 0x09
 59a:	1a 86       	std	Y+10, r1	; 0x0a
 59c:	81 e0       	ldi	r24, 0x01	; 1
 59e:	8b 87       	std	Y+11, r24	; 0x0b
 5a0:	82 e0       	ldi	r24, 0x02	; 2
 5a2:	8c 87       	std	Y+12, r24	; 0x0c
			0x00,0x00,0x01,0x02
		};
		
		int8_t port_b_temp_pattern[]={
 5a4:	80 e4       	ldi	r24, 0x40	; 64
 5a6:	8d 83       	std	Y+5, r24	; 0x05
 5a8:	80 e8       	ldi	r24, 0x80	; 128
 5aa:	8e 83       	std	Y+6, r24	; 0x06
 5ac:	1f 82       	std	Y+7, r1	; 0x07
 5ae:	18 86       	std	Y+8, r1	; 0x08
 5b0:	fe 01       	movw	r30, r28
 5b2:	31 96       	adiw	r30, 0x01	; 1
 5b4:	ce 01       	movw	r24, r28
 5b6:	09 96       	adiw	r24, 0x09	; 9
 5b8:	be 01       	movw	r22, r28
 5ba:	6b 5f       	subi	r22, 0xFB	; 251
 5bc:	7f 4f       	sbci	r23, 0xFF	; 255
 5be:	9b 01       	movw	r18, r22
			0x40,0x80,0x00,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 5c0:	41 91       	ld	r20, Z+
 5c2:	42 bb       	out	0x12, r20	; 18
			
			PORTB = 0x00;
 5c4:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 5c6:	dc 01       	movw	r26, r24
 5c8:	4d 91       	ld	r20, X+
 5ca:	cd 01       	movw	r24, r26
 5cc:	4b bb       	out	0x1b, r20	; 27
 5ce:	b3 e5       	ldi	r27, 0x53	; 83
 5d0:	ba 95       	dec	r27
 5d2:	f1 f7       	brne	.-4      	; 0x5d0 <draw_p2_pattern+0x166>
 5d4:	00 00       	nop
			_delay_ms(0.25);
			
			PORTA = 0x00;
 5d6:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 5d8:	db 01       	movw	r26, r22
 5da:	4d 91       	ld	r20, X+
 5dc:	bd 01       	movw	r22, r26
 5de:	48 bb       	out	0x18, r20	; 24
 5e0:	b3 e5       	ldi	r27, 0x53	; 83
 5e2:	ba 95       	dec	r27
 5e4:	f1 f7       	brne	.-4      	; 0x5e2 <draw_p2_pattern+0x178>
 5e6:	00 00       	nop
		
		int8_t port_b_temp_pattern[]={
			0x40,0x80,0x00,0x00
		};
		
		for(i=0;i<4;i++)
 5e8:	e2 17       	cp	r30, r18
 5ea:	f3 07       	cpc	r31, r19
 5ec:	49 f7       	brne	.-46     	; 0x5c0 <draw_p2_pattern+0x156>
 5ee:	ef c0       	rjmp	.+478    	; 0x7ce <draw_p2_pattern+0x364>
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	
	else if(x==2 && y==2)
 5f0:	62 30       	cpi	r22, 0x02	; 2
 5f2:	c1 f5       	brne	.+112    	; 0x664 <draw_p2_pattern+0x1fa>
	{
		
		temp_col[0]=col_R[6];
 5f4:	80 91 86 00 	lds	r24, 0x0086
 5f8:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[7];
 5fa:	80 91 87 00 	lds	r24, 0x0087
 5fe:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[8];
 600:	80 91 88 00 	lds	r24, 0x0088
 604:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[9];
 606:	80 91 89 00 	lds	r24, 0x0089
 60a:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 60c:	19 86       	std	Y+9, r1	; 0x09
 60e:	1a 86       	std	Y+10, r1	; 0x0a
 610:	81 e0       	ldi	r24, 0x01	; 1
 612:	8b 87       	std	Y+11, r24	; 0x0b
 614:	82 e0       	ldi	r24, 0x02	; 2
 616:	8c 87       	std	Y+12, r24	; 0x0c
			0x00,0x00,0x01,0x02
		};
		
		int8_t port_b_temp_pattern[]={
 618:	80 e4       	ldi	r24, 0x40	; 64
 61a:	8d 83       	std	Y+5, r24	; 0x05
 61c:	80 e8       	ldi	r24, 0x80	; 128
 61e:	8e 83       	std	Y+6, r24	; 0x06
 620:	1f 82       	std	Y+7, r1	; 0x07
 622:	18 86       	std	Y+8, r1	; 0x08
 624:	fe 01       	movw	r30, r28
 626:	31 96       	adiw	r30, 0x01	; 1
 628:	ce 01       	movw	r24, r28
 62a:	09 96       	adiw	r24, 0x09	; 9
 62c:	be 01       	movw	r22, r28
 62e:	6b 5f       	subi	r22, 0xFB	; 251
 630:	7f 4f       	sbci	r23, 0xFF	; 255
 632:	9b 01       	movw	r18, r22
			0x40,0x80,0x00,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 634:	41 91       	ld	r20, Z+
 636:	42 bb       	out	0x12, r20	; 18
			
			PORTB = 0x00;
 638:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 63a:	dc 01       	movw	r26, r24
 63c:	4d 91       	ld	r20, X+
 63e:	cd 01       	movw	r24, r26
 640:	4b bb       	out	0x1b, r20	; 27
 642:	b3 e5       	ldi	r27, 0x53	; 83
 644:	ba 95       	dec	r27
 646:	f1 f7       	brne	.-4      	; 0x644 <draw_p2_pattern+0x1da>
 648:	00 00       	nop
			_delay_ms(0.25);
			
			PORTA = 0x00;
 64a:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 64c:	db 01       	movw	r26, r22
 64e:	4d 91       	ld	r20, X+
 650:	bd 01       	movw	r22, r26
 652:	48 bb       	out	0x18, r20	; 24
 654:	b3 e5       	ldi	r27, 0x53	; 83
 656:	ba 95       	dec	r27
 658:	f1 f7       	brne	.-4      	; 0x656 <draw_p2_pattern+0x1ec>
 65a:	00 00       	nop
		
		int8_t port_b_temp_pattern[]={
			0x40,0x80,0x00,0x00
		};
		
		for(i=0;i<4;i++)
 65c:	e2 17       	cp	r30, r18
 65e:	f3 07       	cpc	r31, r19
 660:	49 f7       	brne	.-46     	; 0x634 <draw_p2_pattern+0x1ca>
 662:	b5 c0       	rjmp	.+362    	; 0x7ce <draw_p2_pattern+0x364>
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	
	else if(x==2 && y==3)
 664:	63 30       	cpi	r22, 0x03	; 3
 666:	09 f0       	breq	.+2      	; 0x66a <draw_p2_pattern+0x200>
 668:	b2 c0       	rjmp	.+356    	; 0x7ce <draw_p2_pattern+0x364>
	{
		
		temp_col[0]=col_R[11];
 66a:	80 91 8b 00 	lds	r24, 0x008B
 66e:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[12];
 670:	80 91 8c 00 	lds	r24, 0x008C
 674:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[13];
 676:	80 91 8d 00 	lds	r24, 0x008D
 67a:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[14];
 67c:	80 91 8e 00 	lds	r24, 0x008E
 680:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 682:	19 86       	std	Y+9, r1	; 0x09
 684:	1a 86       	std	Y+10, r1	; 0x0a
 686:	81 e0       	ldi	r24, 0x01	; 1
 688:	8b 87       	std	Y+11, r24	; 0x0b
 68a:	82 e0       	ldi	r24, 0x02	; 2
 68c:	8c 87       	std	Y+12, r24	; 0x0c
			0x00,0x00,0x01,0x02
		};
		
		int8_t port_b_temp_pattern[]={
 68e:	80 e4       	ldi	r24, 0x40	; 64
 690:	8d 83       	std	Y+5, r24	; 0x05
 692:	80 e8       	ldi	r24, 0x80	; 128
 694:	8e 83       	std	Y+6, r24	; 0x06
 696:	1f 82       	std	Y+7, r1	; 0x07
 698:	18 86       	std	Y+8, r1	; 0x08
 69a:	fe 01       	movw	r30, r28
 69c:	31 96       	adiw	r30, 0x01	; 1
 69e:	ce 01       	movw	r24, r28
 6a0:	09 96       	adiw	r24, 0x09	; 9
 6a2:	be 01       	movw	r22, r28
 6a4:	6b 5f       	subi	r22, 0xFB	; 251
 6a6:	7f 4f       	sbci	r23, 0xFF	; 255
 6a8:	9b 01       	movw	r18, r22
			0x40,0x80,0x00,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 6aa:	41 91       	ld	r20, Z+
 6ac:	42 bb       	out	0x12, r20	; 18
			
			PORTB = 0x00;
 6ae:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 6b0:	dc 01       	movw	r26, r24
 6b2:	4d 91       	ld	r20, X+
 6b4:	cd 01       	movw	r24, r26
 6b6:	4b bb       	out	0x1b, r20	; 27
 6b8:	b3 e5       	ldi	r27, 0x53	; 83
 6ba:	ba 95       	dec	r27
 6bc:	f1 f7       	brne	.-4      	; 0x6ba <draw_p2_pattern+0x250>
 6be:	00 00       	nop
			_delay_ms(0.25);
			
			PORTA = 0x00;
 6c0:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 6c2:	db 01       	movw	r26, r22
 6c4:	4d 91       	ld	r20, X+
 6c6:	bd 01       	movw	r22, r26
 6c8:	48 bb       	out	0x18, r20	; 24
 6ca:	b3 e5       	ldi	r27, 0x53	; 83
 6cc:	ba 95       	dec	r27
 6ce:	f1 f7       	brne	.-4      	; 0x6cc <draw_p2_pattern+0x262>
 6d0:	00 00       	nop
		
		int8_t port_b_temp_pattern[]={
			0x40,0x80,0x00,0x00
		};
		
		for(i=0;i<4;i++)
 6d2:	e2 17       	cp	r30, r18
 6d4:	f3 07       	cpc	r31, r19
 6d6:	49 f7       	brne	.-46     	; 0x6aa <draw_p2_pattern+0x240>
 6d8:	7a c0       	rjmp	.+244    	; 0x7ce <draw_p2_pattern+0x364>
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	
	else if(x==3 && y==1)
 6da:	83 30       	cpi	r24, 0x03	; 3
 6dc:	09 f0       	breq	.+2      	; 0x6e0 <draw_p2_pattern+0x276>
 6de:	77 c0       	rjmp	.+238    	; 0x7ce <draw_p2_pattern+0x364>
 6e0:	61 30       	cpi	r22, 0x01	; 1
 6e2:	31 f5       	brne	.+76     	; 0x730 <draw_p2_pattern+0x2c6>
	{
		
		temp_col[0]=col_R[1];
 6e4:	80 91 81 00 	lds	r24, 0x0081
 6e8:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
 6ea:	80 91 82 00 	lds	r24, 0x0082
 6ee:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
 6f0:	80 91 83 00 	lds	r24, 0x0083
 6f4:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
 6f6:	80 91 84 00 	lds	r24, 0x0084
 6fa:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_b_temp_pattern[]={
 6fc:	82 e0       	ldi	r24, 0x02	; 2
 6fe:	8d 83       	std	Y+5, r24	; 0x05
 700:	84 e0       	ldi	r24, 0x04	; 4
 702:	8e 83       	std	Y+6, r24	; 0x06
 704:	88 e0       	ldi	r24, 0x08	; 8
 706:	8f 83       	std	Y+7, r24	; 0x07
 708:	80 e1       	ldi	r24, 0x10	; 16
 70a:	88 87       	std	Y+8, r24	; 0x08
 70c:	fe 01       	movw	r30, r28
 70e:	31 96       	adiw	r30, 0x01	; 1
 710:	de 01       	movw	r26, r28
 712:	15 96       	adiw	r26, 0x05	; 5
 714:	cd 01       	movw	r24, r26
			0x02,0x04,0x08,0x10
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 716:	21 91       	ld	r18, Z+
 718:	22 bb       	out	0x12, r18	; 18
			
			PORTA = 0x00;
 71a:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 71c:	2d 91       	ld	r18, X+
 71e:	28 bb       	out	0x18, r18	; 24
 720:	23 e5       	ldi	r18, 0x53	; 83
 722:	2a 95       	dec	r18
 724:	f1 f7       	brne	.-4      	; 0x722 <draw_p2_pattern+0x2b8>
 726:	00 00       	nop
		
		int8_t port_b_temp_pattern[]={
			0x02,0x04,0x08,0x10
		};
		
		for(i=0;i<4;i++)
 728:	e8 17       	cp	r30, r24
 72a:	f9 07       	cpc	r31, r25
 72c:	a1 f7       	brne	.-24     	; 0x716 <draw_p2_pattern+0x2ac>
 72e:	4f c0       	rjmp	.+158    	; 0x7ce <draw_p2_pattern+0x364>
			PORTA = 0x00;
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	else if(x==3 && y==2)
 730:	62 30       	cpi	r22, 0x02	; 2
 732:	31 f5       	brne	.+76     	; 0x780 <draw_p2_pattern+0x316>
	{
		
		temp_col[0]=col_R[6];
 734:	80 91 86 00 	lds	r24, 0x0086
 738:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[7];
 73a:	80 91 87 00 	lds	r24, 0x0087
 73e:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[8];
 740:	80 91 88 00 	lds	r24, 0x0088
 744:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[9];
 746:	80 91 89 00 	lds	r24, 0x0089
 74a:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_b_temp_pattern[]={
 74c:	82 e0       	ldi	r24, 0x02	; 2
 74e:	8d 83       	std	Y+5, r24	; 0x05
 750:	84 e0       	ldi	r24, 0x04	; 4
 752:	8e 83       	std	Y+6, r24	; 0x06
 754:	88 e0       	ldi	r24, 0x08	; 8
 756:	8f 83       	std	Y+7, r24	; 0x07
 758:	80 e1       	ldi	r24, 0x10	; 16
 75a:	88 87       	std	Y+8, r24	; 0x08
 75c:	fe 01       	movw	r30, r28
 75e:	31 96       	adiw	r30, 0x01	; 1
 760:	de 01       	movw	r26, r28
 762:	15 96       	adiw	r26, 0x05	; 5
 764:	cd 01       	movw	r24, r26
			0x02,0x04,0x08,0x10
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 766:	21 91       	ld	r18, Z+
 768:	22 bb       	out	0x12, r18	; 18
			
			PORTA = 0x00;
 76a:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 76c:	2d 91       	ld	r18, X+
 76e:	28 bb       	out	0x18, r18	; 24
 770:	43 e5       	ldi	r20, 0x53	; 83
 772:	4a 95       	dec	r20
 774:	f1 f7       	brne	.-4      	; 0x772 <draw_p2_pattern+0x308>
 776:	00 00       	nop
		
		int8_t port_b_temp_pattern[]={
			0x02,0x04,0x08,0x10
		};
		
		for(i=0;i<4;i++)
 778:	e8 17       	cp	r30, r24
 77a:	f9 07       	cpc	r31, r25
 77c:	a1 f7       	brne	.-24     	; 0x766 <draw_p2_pattern+0x2fc>
 77e:	27 c0       	rjmp	.+78     	; 0x7ce <draw_p2_pattern+0x364>
			PORTA = 0x00;
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	else if(x==3 && y==3)
 780:	63 30       	cpi	r22, 0x03	; 3
 782:	29 f5       	brne	.+74     	; 0x7ce <draw_p2_pattern+0x364>
	{
		
		temp_col[0]=col_R[11];
 784:	80 91 8b 00 	lds	r24, 0x008B
 788:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[12];
 78a:	80 91 8c 00 	lds	r24, 0x008C
 78e:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[13];
 790:	80 91 8d 00 	lds	r24, 0x008D
 794:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[14];
 796:	80 91 8e 00 	lds	r24, 0x008E
 79a:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_b_temp_pattern[]={
 79c:	82 e0       	ldi	r24, 0x02	; 2
 79e:	8d 83       	std	Y+5, r24	; 0x05
 7a0:	84 e0       	ldi	r24, 0x04	; 4
 7a2:	8e 83       	std	Y+6, r24	; 0x06
 7a4:	88 e0       	ldi	r24, 0x08	; 8
 7a6:	8f 83       	std	Y+7, r24	; 0x07
 7a8:	80 e1       	ldi	r24, 0x10	; 16
 7aa:	88 87       	std	Y+8, r24	; 0x08
 7ac:	fe 01       	movw	r30, r28
 7ae:	31 96       	adiw	r30, 0x01	; 1
 7b0:	de 01       	movw	r26, r28
 7b2:	15 96       	adiw	r26, 0x05	; 5
 7b4:	cd 01       	movw	r24, r26
			0x02,0x04,0x08,0x10
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 7b6:	21 91       	ld	r18, Z+
 7b8:	22 bb       	out	0x12, r18	; 18
			
			PORTA = 0x00;
 7ba:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 7bc:	2d 91       	ld	r18, X+
 7be:	28 bb       	out	0x18, r18	; 24
 7c0:	23 e5       	ldi	r18, 0x53	; 83
 7c2:	2a 95       	dec	r18
 7c4:	f1 f7       	brne	.-4      	; 0x7c2 <draw_p2_pattern+0x358>
 7c6:	00 00       	nop
		
		int8_t port_b_temp_pattern[]={
			0x02,0x04,0x08,0x10
		};
		
		for(i=0;i<4;i++)
 7c8:	e8 17       	cp	r30, r24
 7ca:	f9 07       	cpc	r31, r25
 7cc:	a1 f7       	brne	.-24     	; 0x7b6 <draw_p2_pattern+0x34c>
			PORTA = 0x00;
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
}
 7ce:	2c 96       	adiw	r28, 0x0c	; 12
 7d0:	0f b6       	in	r0, 0x3f	; 63
 7d2:	f8 94       	cli
 7d4:	de bf       	out	0x3e, r29	; 62
 7d6:	0f be       	out	0x3f, r0	; 63
 7d8:	cd bf       	out	0x3d, r28	; 61
 7da:	df 91       	pop	r29
 7dc:	cf 91       	pop	r28
 7de:	08 95       	ret

000007e0 <draw_occupied_positions>:

void draw_occupied_positions()
{
 7e0:	df 92       	push	r13
 7e2:	ef 92       	push	r14
 7e4:	ff 92       	push	r15
 7e6:	0f 93       	push	r16
 7e8:	1f 93       	push	r17
 7ea:	cf 93       	push	r28
 7ec:	df 93       	push	r29
	
	/************************************************************************/
	/* TEST BLOCK                                                           */
	/************************************************************************/
	
	position[1][2]=1;
 7ee:	81 e0       	ldi	r24, 0x01	; 1
 7f0:	80 93 99 00 	sts	0x0099, r24
	position[2][3]=1;
 7f4:	80 93 9e 00 	sts	0x009E, r24
	position[3][2]=2;
 7f8:	82 e0       	ldi	r24, 0x02	; 2
 7fa:	80 93 a1 00 	sts	0x00A1, r24
	position[3][1]=2;
 7fe:	80 93 a0 00 	sts	0x00A0, r24
 802:	08 e9       	ldi	r16, 0x98	; 152
 804:	10 e0       	ldi	r17, 0x00	; 0
	
	/************************************************************************/
	/* END OF TEST BLOCK                                                                     */
	/************************************************************************/
	
	for(i=1;i<=3;i++)
 806:	ee 24       	eor	r14, r14
 808:	e3 94       	inc	r14
		}
	}
}

void draw_occupied_positions()
{
 80a:	dd 24       	eor	r13, r13
 80c:	d3 94       	inc	r13
 80e:	17 c0       	rjmp	.+46     	; 0x83e <draw_occupied_positions+0x5e>
	
	for(i=1;i<=3;i++)
	{
		for(j=1;j<=3;j++)
		{
			if(position[i][j]==-1)
 810:	99 91       	ld	r25, Y+
 812:	9f 3f       	cpi	r25, 0xFF	; 255
 814:	59 f0       	breq	.+22     	; 0x82c <draw_occupied_positions+0x4c>
			{
				//Do Nothing
			}
			else if(position[i][j]==1)
 816:	91 30       	cpi	r25, 0x01	; 1
 818:	29 f4       	brne	.+10     	; 0x824 <draw_occupied_positions+0x44>
			{
				draw_p1_pattern(i,j);
 81a:	6f 2d       	mov	r22, r15
 81c:	8e 2d       	mov	r24, r14
 81e:	0e 94 83 00 	call	0x106	; 0x106 <draw_p1_pattern>
 822:	04 c0       	rjmp	.+8      	; 0x82c <draw_occupied_positions+0x4c>
			}
			else
			{
				draw_p2_pattern(i,j);
 824:	6f 2d       	mov	r22, r15
 826:	8e 2d       	mov	r24, r14
 828:	0e 94 35 02 	call	0x46a	; 0x46a <draw_p2_pattern>
	/* END OF TEST BLOCK                                                                     */
	/************************************************************************/
	
	for(i=1;i<=3;i++)
	{
		for(j=1;j<=3;j++)
 82c:	f3 94       	inc	r15
 82e:	84 e0       	ldi	r24, 0x04	; 4
 830:	f8 12       	cpse	r15, r24
 832:	ee cf       	rjmp	.-36     	; 0x810 <draw_occupied_positions+0x30>
	
	/************************************************************************/
	/* END OF TEST BLOCK                                                                     */
	/************************************************************************/
	
	for(i=1;i<=3;i++)
 834:	e3 94       	inc	r14
 836:	0c 5f       	subi	r16, 0xFC	; 252
 838:	1f 4f       	sbci	r17, 0xFF	; 255
 83a:	e8 16       	cp	r14, r24
 83c:	19 f0       	breq	.+6      	; 0x844 <draw_occupied_positions+0x64>
		}
	}
}

void draw_occupied_positions()
{
 83e:	e8 01       	movw	r28, r16
 840:	fd 2c       	mov	r15, r13
 842:	e6 cf       	rjmp	.-52     	; 0x810 <draw_occupied_positions+0x30>
			{
				draw_p2_pattern(i,j);
			}
		}
	}
}
 844:	df 91       	pop	r29
 846:	cf 91       	pop	r28
 848:	1f 91       	pop	r17
 84a:	0f 91       	pop	r16
 84c:	ff 90       	pop	r15
 84e:	ef 90       	pop	r14
 850:	df 90       	pop	r13
 852:	08 95       	ret

00000854 <draw_blinking_pattern>:

void draw_blinking_pattern()
{
 854:	df 92       	push	r13
 856:	ef 92       	push	r14
 858:	ff 92       	push	r15
 85a:	0f 93       	push	r16
 85c:	1f 93       	push	r17
 85e:	cf 93       	push	r28
 860:	df 93       	push	r29
 862:	cd b7       	in	r28, 0x3d	; 61
 864:	de b7       	in	r29, 0x3e	; 62
 866:	2c 97       	sbiw	r28, 0x0c	; 12
 868:	0f b6       	in	r0, 0x3f	; 63
 86a:	f8 94       	cli
 86c:	de bf       	out	0x3e, r29	; 62
 86e:	0f be       	out	0x3f, r0	; 63
 870:	cd bf       	out	0x3d, r28	; 61
	int8_t temp_col[4];
	
	int8_t i;
	
	if(current_player==1 && current_x==1 && current_y==1)
 872:	80 91 92 00 	lds	r24, 0x0092
 876:	81 30       	cpi	r24, 0x01	; 1
 878:	09 f0       	breq	.+2      	; 0x87c <__stack+0x1d>
 87a:	ce c2       	rjmp	.+1436   	; 0xe18 <__stack+0x5b9>
 87c:	80 91 90 00 	lds	r24, 0x0090
 880:	81 30       	cpi	r24, 0x01	; 1
 882:	09 f0       	breq	.+2      	; 0x886 <__stack+0x27>
 884:	ae c2       	rjmp	.+1372   	; 0xde2 <__stack+0x583>
 886:	90 91 91 00 	lds	r25, 0x0091
 88a:	91 30       	cpi	r25, 0x01	; 1
 88c:	09 f0       	breq	.+2      	; 0x890 <__stack+0x31>
 88e:	a4 c2       	rjmp	.+1352   	; 0xdd8 <__stack+0x579>
	{
		
		temp_col[0]=col_R[1];
 890:	80 91 81 00 	lds	r24, 0x0081
 894:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
 896:	80 91 82 00 	lds	r24, 0x0082
 89a:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
 89c:	80 91 83 00 	lds	r24, 0x0083
 8a0:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
 8a2:	80 91 84 00 	lds	r24, 0x0084
 8a6:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 8a8:	1d 82       	std	Y+5, r1	; 0x05
 8aa:	80 e3       	ldi	r24, 0x30	; 48
 8ac:	8e 83       	std	Y+6, r24	; 0x06
 8ae:	8f 83       	std	Y+7, r24	; 0x07
 8b0:	18 86       	std	Y+8, r1	; 0x08
			0x00,0x30,0x30,0x00
		};
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 8b2:	d1 2c       	mov	r13, r1
 8b4:	8e 01       	movw	r16, r28
 8b6:	0b 5f       	subi	r16, 0xFB	; 251
 8b8:	1f 4f       	sbci	r17, 0xFF	; 255
 8ba:	78 01       	movw	r14, r16
		{
			if(loop%2==0)
 8bc:	d0 fc       	sbrc	r13, 0
 8be:	10 c0       	rjmp	.+32     	; 0x8e0 <__stack+0x81>
 8c0:	fe 01       	movw	r30, r28
 8c2:	31 96       	adiw	r30, 0x01	; 1
 8c4:	d8 01       	movw	r26, r16
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 8c6:	81 91       	ld	r24, Z+
 8c8:	82 bb       	out	0x12, r24	; 18
					
					PORTB = 0x00;
 8ca:	18 ba       	out	0x18, r1	; 24
					PORTA = port_a_temp_pattern[i];
 8cc:	8d 91       	ld	r24, X+
 8ce:	8b bb       	out	0x1b, r24	; 27
 8d0:	22 e4       	ldi	r18, 0x42	; 66
 8d2:	2a 95       	dec	r18
 8d4:	f1 f7       	brne	.-4      	; 0x8d2 <__stack+0x73>
 8d6:	00 c0       	rjmp	.+0      	; 0x8d8 <__stack+0x79>
		int8_t loop;
		for(loop=0;loop<10;loop++)
		{
			if(loop%2==0)
			{
				for(i=0;i<4;i++)
 8d8:	ee 15       	cp	r30, r14
 8da:	ff 05       	cpc	r31, r15
 8dc:	a1 f7       	brne	.-24     	; 0x8c6 <__stack+0x67>
 8de:	17 c0       	rjmp	.+46     	; 0x90e <__stack+0xaf>
 8e0:	fe 01       	movw	r30, r28
 8e2:	31 96       	adiw	r30, 0x01	; 1
			}
			else
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 8e4:	81 91       	ld	r24, Z+
 8e6:	82 bb       	out	0x12, r24	; 18
					
					PORTB = 0x00;
 8e8:	18 ba       	out	0x18, r1	; 24
					PORTA = 0x00;
 8ea:	1b ba       	out	0x1b, r1	; 27
 8ec:	82 e4       	ldi	r24, 0x42	; 66
 8ee:	8a 95       	dec	r24
 8f0:	f1 f7       	brne	.-4      	; 0x8ee <__stack+0x8f>
 8f2:	00 c0       	rjmp	.+0      	; 0x8f4 <__stack+0x95>
					_delay_ms(0.20);
				}
			}
			else
			{
				for(i=0;i<4;i++)
 8f4:	e0 17       	cp	r30, r16
 8f6:	f1 07       	cpc	r31, r17
 8f8:	a9 f7       	brne	.-22     	; 0x8e4 <__stack+0x85>
					PORTA = 0x00;
					
					_delay_ms(0.20);
				}
				
				draw_boundary();
 8fa:	0e 94 63 00 	call	0xc6	; 0xc6 <draw_boundary>
				draw_occupied_positions();
 8fe:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <draw_occupied_positions>
 902:	a9 ef       	ldi	r26, 0xF9	; 249
 904:	b0 e0       	ldi	r27, 0x00	; 0
 906:	11 97       	sbiw	r26, 0x01	; 1
 908:	f1 f7       	brne	.-4      	; 0x906 <__stack+0xa7>
 90a:	00 c0       	rjmp	.+0      	; 0x90c <__stack+0xad>
 90c:	00 00       	nop
		int8_t port_a_temp_pattern[]={
			0x00,0x30,0x30,0x00
		};
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 90e:	d3 94       	inc	r13
 910:	ba e0       	ldi	r27, 0x0A	; 10
 912:	db 12       	cpse	r13, r27
 914:	d3 cf       	rjmp	.-90     	; 0x8bc <__stack+0x5d>
 916:	80 c2       	rjmp	.+1280   	; 0xe18 <__stack+0x5b9>
	}
	
	else if(current_player==1 && current_x==1 && current_y==2)
	{
		
		temp_col[0]=col_R[6];
 918:	80 91 86 00 	lds	r24, 0x0086
 91c:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[7];
 91e:	80 91 87 00 	lds	r24, 0x0087
 922:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[8];
 924:	80 91 88 00 	lds	r24, 0x0088
 928:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[9];
 92a:	80 91 89 00 	lds	r24, 0x0089
 92e:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 930:	1d 82       	std	Y+5, r1	; 0x05
 932:	80 e3       	ldi	r24, 0x30	; 48
 934:	8e 83       	std	Y+6, r24	; 0x06
 936:	8f 83       	std	Y+7, r24	; 0x07
 938:	18 86       	std	Y+8, r1	; 0x08
			0x00,0x30,0x30,0x00
		};
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 93a:	d1 2c       	mov	r13, r1
 93c:	8e 01       	movw	r16, r28
 93e:	0b 5f       	subi	r16, 0xFB	; 251
 940:	1f 4f       	sbci	r17, 0xFF	; 255
 942:	78 01       	movw	r14, r16
		{
			if(loop%2==0)
 944:	d0 fc       	sbrc	r13, 0
 946:	10 c0       	rjmp	.+32     	; 0x968 <__stack+0x109>
 948:	fe 01       	movw	r30, r28
 94a:	31 96       	adiw	r30, 0x01	; 1
 94c:	d8 01       	movw	r26, r16
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 94e:	81 91       	ld	r24, Z+
 950:	82 bb       	out	0x12, r24	; 18
					
					PORTB = 0x00;
 952:	18 ba       	out	0x18, r1	; 24
					PORTA = port_a_temp_pattern[i];
 954:	8d 91       	ld	r24, X+
 956:	8b bb       	out	0x1b, r24	; 27
 958:	22 e4       	ldi	r18, 0x42	; 66
 95a:	2a 95       	dec	r18
 95c:	f1 f7       	brne	.-4      	; 0x95a <__stack+0xfb>
 95e:	00 c0       	rjmp	.+0      	; 0x960 <__stack+0x101>
		int8_t loop;
		for(loop=0;loop<10;loop++)
		{
			if(loop%2==0)
			{
				for(i=0;i<4;i++)
 960:	ee 15       	cp	r30, r14
 962:	ff 05       	cpc	r31, r15
 964:	a1 f7       	brne	.-24     	; 0x94e <__stack+0xef>
 966:	17 c0       	rjmp	.+46     	; 0x996 <__stack+0x137>
 968:	fe 01       	movw	r30, r28
 96a:	31 96       	adiw	r30, 0x01	; 1
			}
			else
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 96c:	81 91       	ld	r24, Z+
 96e:	82 bb       	out	0x12, r24	; 18
					
					PORTB = 0x00;
 970:	18 ba       	out	0x18, r1	; 24
					PORTA = 0x00;
 972:	1b ba       	out	0x1b, r1	; 27
 974:	82 e4       	ldi	r24, 0x42	; 66
 976:	8a 95       	dec	r24
 978:	f1 f7       	brne	.-4      	; 0x976 <__stack+0x117>
 97a:	00 c0       	rjmp	.+0      	; 0x97c <__stack+0x11d>
					_delay_ms(0.20);
				}
			}
			else
			{
				for(i=0;i<4;i++)
 97c:	e0 17       	cp	r30, r16
 97e:	f1 07       	cpc	r31, r17
 980:	a9 f7       	brne	.-22     	; 0x96c <__stack+0x10d>
					PORTA = 0x00;
					
					_delay_ms(0.20);
				}
				
				draw_boundary();
 982:	0e 94 63 00 	call	0xc6	; 0xc6 <draw_boundary>
				draw_occupied_positions();
 986:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <draw_occupied_positions>
 98a:	a9 ef       	ldi	r26, 0xF9	; 249
 98c:	b0 e0       	ldi	r27, 0x00	; 0
 98e:	11 97       	sbiw	r26, 0x01	; 1
 990:	f1 f7       	brne	.-4      	; 0x98e <__stack+0x12f>
 992:	00 c0       	rjmp	.+0      	; 0x994 <__stack+0x135>
 994:	00 00       	nop
		int8_t port_a_temp_pattern[]={
			0x00,0x30,0x30,0x00
		};
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 996:	d3 94       	inc	r13
 998:	ba e0       	ldi	r27, 0x0A	; 10
 99a:	db 12       	cpse	r13, r27
 99c:	d3 cf       	rjmp	.-90     	; 0x944 <__stack+0xe5>
 99e:	3c c2       	rjmp	.+1144   	; 0xe18 <__stack+0x5b9>
	}
	
	else if(current_player==1 && current_x==1 && current_y==3)
	{
		
		temp_col[0]=col_R[11];
 9a0:	80 91 8b 00 	lds	r24, 0x008B
 9a4:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[12];
 9a6:	80 91 8c 00 	lds	r24, 0x008C
 9aa:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[13];
 9ac:	80 91 8d 00 	lds	r24, 0x008D
 9b0:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[14];
 9b2:	80 91 8e 00 	lds	r24, 0x008E
 9b6:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 9b8:	1d 82       	std	Y+5, r1	; 0x05
 9ba:	80 e3       	ldi	r24, 0x30	; 48
 9bc:	8e 83       	std	Y+6, r24	; 0x06
 9be:	8f 83       	std	Y+7, r24	; 0x07
 9c0:	18 86       	std	Y+8, r1	; 0x08
			0x00,0x30,0x30,0x00
		};
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 9c2:	d1 2c       	mov	r13, r1
 9c4:	8e 01       	movw	r16, r28
 9c6:	0b 5f       	subi	r16, 0xFB	; 251
 9c8:	1f 4f       	sbci	r17, 0xFF	; 255
 9ca:	78 01       	movw	r14, r16
		{
			if(loop%2==0)
 9cc:	d0 fc       	sbrc	r13, 0
 9ce:	10 c0       	rjmp	.+32     	; 0x9f0 <__stack+0x191>
 9d0:	fe 01       	movw	r30, r28
 9d2:	31 96       	adiw	r30, 0x01	; 1
 9d4:	d8 01       	movw	r26, r16
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 9d6:	81 91       	ld	r24, Z+
 9d8:	82 bb       	out	0x12, r24	; 18
					
					PORTB = 0x00;
 9da:	18 ba       	out	0x18, r1	; 24
					PORTA = port_a_temp_pattern[i];
 9dc:	8d 91       	ld	r24, X+
 9de:	8b bb       	out	0x1b, r24	; 27
 9e0:	22 e4       	ldi	r18, 0x42	; 66
 9e2:	2a 95       	dec	r18
 9e4:	f1 f7       	brne	.-4      	; 0x9e2 <__stack+0x183>
 9e6:	00 c0       	rjmp	.+0      	; 0x9e8 <__stack+0x189>
		int8_t loop;
		for(loop=0;loop<10;loop++)
		{
			if(loop%2==0)
			{
				for(i=0;i<4;i++)
 9e8:	ee 15       	cp	r30, r14
 9ea:	ff 05       	cpc	r31, r15
 9ec:	a1 f7       	brne	.-24     	; 0x9d6 <__stack+0x177>
 9ee:	17 c0       	rjmp	.+46     	; 0xa1e <__stack+0x1bf>
 9f0:	fe 01       	movw	r30, r28
 9f2:	31 96       	adiw	r30, 0x01	; 1
			}
			else
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 9f4:	81 91       	ld	r24, Z+
 9f6:	82 bb       	out	0x12, r24	; 18
					
					PORTB = 0x00;
 9f8:	18 ba       	out	0x18, r1	; 24
					PORTA = 0x00;
 9fa:	1b ba       	out	0x1b, r1	; 27
 9fc:	82 e4       	ldi	r24, 0x42	; 66
 9fe:	8a 95       	dec	r24
 a00:	f1 f7       	brne	.-4      	; 0x9fe <__stack+0x19f>
 a02:	00 c0       	rjmp	.+0      	; 0xa04 <__stack+0x1a5>
					_delay_ms(0.20);
				}
			}
			else
			{
				for(i=0;i<4;i++)
 a04:	e0 17       	cp	r30, r16
 a06:	f1 07       	cpc	r31, r17
 a08:	a9 f7       	brne	.-22     	; 0x9f4 <__stack+0x195>
					PORTA = 0x00;
					
					_delay_ms(0.20);
				}
				
				draw_boundary();
 a0a:	0e 94 63 00 	call	0xc6	; 0xc6 <draw_boundary>
				draw_occupied_positions();
 a0e:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <draw_occupied_positions>
 a12:	a9 ef       	ldi	r26, 0xF9	; 249
 a14:	b0 e0       	ldi	r27, 0x00	; 0
 a16:	11 97       	sbiw	r26, 0x01	; 1
 a18:	f1 f7       	brne	.-4      	; 0xa16 <__stack+0x1b7>
 a1a:	00 c0       	rjmp	.+0      	; 0xa1c <__stack+0x1bd>
 a1c:	00 00       	nop
		int8_t port_a_temp_pattern[]={
			0x00,0x30,0x30,0x00
		};
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 a1e:	d3 94       	inc	r13
 a20:	ba e0       	ldi	r27, 0x0A	; 10
 a22:	db 12       	cpse	r13, r27
 a24:	d3 cf       	rjmp	.-90     	; 0x9cc <__stack+0x16d>
 a26:	f8 c1       	rjmp	.+1008   	; 0xe18 <__stack+0x5b9>
				_delay_ms(1);
			}
		}
	}
	
	else if(current_player==1 && current_x==2 && current_y==1)
 a28:	80 91 91 00 	lds	r24, 0x0091
 a2c:	81 30       	cpi	r24, 0x01	; 1
 a2e:	09 f0       	breq	.+2      	; 0xa32 <__stack+0x1d3>
 a30:	e3 c1       	rjmp	.+966    	; 0xdf8 <__stack+0x599>
	{
		
		temp_col[0]=col_R[1];
 a32:	80 91 81 00 	lds	r24, 0x0081
 a36:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
 a38:	80 91 82 00 	lds	r24, 0x0082
 a3c:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
 a3e:	80 91 83 00 	lds	r24, 0x0083
 a42:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
 a44:	80 91 84 00 	lds	r24, 0x0084
 a48:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 a4a:	19 86       	std	Y+9, r1	; 0x09
 a4c:	81 e0       	ldi	r24, 0x01	; 1
 a4e:	8a 87       	std	Y+10, r24	; 0x0a
 a50:	8b 87       	std	Y+11, r24	; 0x0b
 a52:	1c 86       	std	Y+12, r1	; 0x0c
			0x00,0x01,0x01,0x00
		};
		
		int8_t port_b_temp_pattern[]={
 a54:	1d 82       	std	Y+5, r1	; 0x05
 a56:	80 e8       	ldi	r24, 0x80	; 128
 a58:	8e 83       	std	Y+6, r24	; 0x06
 a5a:	8f 83       	std	Y+7, r24	; 0x07
 a5c:	18 86       	std	Y+8, r1	; 0x08
			0x00,0x80,0x80,0x00
		};
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 a5e:	d1 2c       	mov	r13, r1
 a60:	8e 01       	movw	r16, r28
 a62:	0b 5f       	subi	r16, 0xFB	; 251
 a64:	1f 4f       	sbci	r17, 0xFF	; 255
 a66:	78 01       	movw	r14, r16
		{
			if(loop%2==0)
 a68:	d0 fc       	sbrc	r13, 0
 a6a:	1d c0       	rjmp	.+58     	; 0xaa6 <__stack+0x247>
 a6c:	fe 01       	movw	r30, r28
 a6e:	31 96       	adiw	r30, 0x01	; 1
 a70:	ce 01       	movw	r24, r28
 a72:	09 96       	adiw	r24, 0x09	; 9
 a74:	a8 01       	movw	r20, r16
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 a76:	21 91       	ld	r18, Z+
 a78:	22 bb       	out	0x12, r18	; 18
					
					PORTB = 0x00;
 a7a:	18 ba       	out	0x18, r1	; 24
					PORTA = port_a_temp_pattern[i];
 a7c:	dc 01       	movw	r26, r24
 a7e:	2d 91       	ld	r18, X+
 a80:	cd 01       	movw	r24, r26
 a82:	2b bb       	out	0x1b, r18	; 27
 a84:	b3 e5       	ldi	r27, 0x53	; 83
 a86:	ba 95       	dec	r27
 a88:	f1 f7       	brne	.-4      	; 0xa86 <__stack+0x227>
 a8a:	00 00       	nop
					_delay_ms(0.25);
					
					PORTA = 0x00;
 a8c:	1b ba       	out	0x1b, r1	; 27
					PORTB = port_b_temp_pattern[i];
 a8e:	da 01       	movw	r26, r20
 a90:	2d 91       	ld	r18, X+
 a92:	ad 01       	movw	r20, r26
 a94:	28 bb       	out	0x18, r18	; 24
 a96:	b3 e5       	ldi	r27, 0x53	; 83
 a98:	ba 95       	dec	r27
 a9a:	f1 f7       	brne	.-4      	; 0xa98 <__stack+0x239>
 a9c:	00 00       	nop
		int8_t loop;
		for(loop=0;loop<10;loop++)
		{
			if(loop%2==0)
			{
				for(i=0;i<4;i++)
 a9e:	ee 15       	cp	r30, r14
 aa0:	ff 05       	cpc	r31, r15
 aa2:	49 f7       	brne	.-46     	; 0xa76 <__stack+0x217>
 aa4:	17 c0       	rjmp	.+46     	; 0xad4 <__stack+0x275>
 aa6:	fe 01       	movw	r30, r28
 aa8:	31 96       	adiw	r30, 0x01	; 1
			}
			else
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 aaa:	81 91       	ld	r24, Z+
 aac:	82 bb       	out	0x12, r24	; 18
					
					PORTB = 0x00;
 aae:	18 ba       	out	0x18, r1	; 24
					PORTA = 0x00;
 ab0:	1b ba       	out	0x1b, r1	; 27
 ab2:	22 e4       	ldi	r18, 0x42	; 66
 ab4:	2a 95       	dec	r18
 ab6:	f1 f7       	brne	.-4      	; 0xab4 <__stack+0x255>
 ab8:	00 c0       	rjmp	.+0      	; 0xaba <__stack+0x25b>
					
				}
			}
			else
			{
				for(i=0;i<4;i++)
 aba:	e0 17       	cp	r30, r16
 abc:	f1 07       	cpc	r31, r17
 abe:	a9 f7       	brne	.-22     	; 0xaaa <__stack+0x24b>
					PORTA = 0x00;
					
					_delay_ms(0.20);
				}
				
				draw_boundary();
 ac0:	0e 94 63 00 	call	0xc6	; 0xc6 <draw_boundary>
				draw_occupied_positions();
 ac4:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <draw_occupied_positions>
 ac8:	89 ef       	ldi	r24, 0xF9	; 249
 aca:	90 e0       	ldi	r25, 0x00	; 0
 acc:	01 97       	sbiw	r24, 0x01	; 1
 ace:	f1 f7       	brne	.-4      	; 0xacc <__stack+0x26d>
 ad0:	00 c0       	rjmp	.+0      	; 0xad2 <__stack+0x273>
 ad2:	00 00       	nop
		int8_t port_b_temp_pattern[]={
			0x00,0x80,0x80,0x00
		};
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 ad4:	d3 94       	inc	r13
 ad6:	9a e0       	ldi	r25, 0x0A	; 10
 ad8:	d9 12       	cpse	r13, r25
 ada:	c6 cf       	rjmp	.-116    	; 0xa68 <__stack+0x209>
 adc:	9d c1       	rjmp	.+826    	; 0xe18 <__stack+0x5b9>
	}
	
	else if(current_player==1 && current_x==2 && current_y==2)
	{
		
		temp_col[0]=col_R[6];
 ade:	80 91 86 00 	lds	r24, 0x0086
 ae2:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[7];
 ae4:	80 91 87 00 	lds	r24, 0x0087
 ae8:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[8];
 aea:	80 91 88 00 	lds	r24, 0x0088
 aee:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[9];
 af0:	80 91 89 00 	lds	r24, 0x0089
 af4:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 af6:	19 86       	std	Y+9, r1	; 0x09
 af8:	81 e0       	ldi	r24, 0x01	; 1
 afa:	8a 87       	std	Y+10, r24	; 0x0a
 afc:	8b 87       	std	Y+11, r24	; 0x0b
 afe:	1c 86       	std	Y+12, r1	; 0x0c
			0x00,0x01,0x01,0x00
		};
		
		int8_t port_b_temp_pattern[]={
 b00:	1d 82       	std	Y+5, r1	; 0x05
 b02:	80 e8       	ldi	r24, 0x80	; 128
 b04:	8e 83       	std	Y+6, r24	; 0x06
 b06:	8f 83       	std	Y+7, r24	; 0x07
 b08:	18 86       	std	Y+8, r1	; 0x08
			0x00,0x80,0x80,0x00
		};
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 b0a:	d1 2c       	mov	r13, r1
 b0c:	8e 01       	movw	r16, r28
 b0e:	0b 5f       	subi	r16, 0xFB	; 251
 b10:	1f 4f       	sbci	r17, 0xFF	; 255
 b12:	78 01       	movw	r14, r16
		{
			if(loop%2==0)
 b14:	d0 fc       	sbrc	r13, 0
 b16:	1d c0       	rjmp	.+58     	; 0xb52 <__stack+0x2f3>
 b18:	fe 01       	movw	r30, r28
 b1a:	31 96       	adiw	r30, 0x01	; 1
 b1c:	ce 01       	movw	r24, r28
 b1e:	09 96       	adiw	r24, 0x09	; 9
 b20:	a8 01       	movw	r20, r16
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 b22:	21 91       	ld	r18, Z+
 b24:	22 bb       	out	0x12, r18	; 18
					
					PORTB = 0x00;
 b26:	18 ba       	out	0x18, r1	; 24
					PORTA = port_a_temp_pattern[i];
 b28:	dc 01       	movw	r26, r24
 b2a:	2d 91       	ld	r18, X+
 b2c:	cd 01       	movw	r24, r26
 b2e:	2b bb       	out	0x1b, r18	; 27
 b30:	b3 e5       	ldi	r27, 0x53	; 83
 b32:	ba 95       	dec	r27
 b34:	f1 f7       	brne	.-4      	; 0xb32 <__stack+0x2d3>
 b36:	00 00       	nop
					_delay_ms(0.25);
					
					PORTA = 0x00;
 b38:	1b ba       	out	0x1b, r1	; 27
					PORTB = port_b_temp_pattern[i];
 b3a:	da 01       	movw	r26, r20
 b3c:	2d 91       	ld	r18, X+
 b3e:	ad 01       	movw	r20, r26
 b40:	28 bb       	out	0x18, r18	; 24
 b42:	b3 e5       	ldi	r27, 0x53	; 83
 b44:	ba 95       	dec	r27
 b46:	f1 f7       	brne	.-4      	; 0xb44 <__stack+0x2e5>
 b48:	00 00       	nop
		int8_t loop;
		for(loop=0;loop<10;loop++)
		{
			if(loop%2==0)
			{
				for(i=0;i<4;i++)
 b4a:	ee 15       	cp	r30, r14
 b4c:	ff 05       	cpc	r31, r15
 b4e:	49 f7       	brne	.-46     	; 0xb22 <__stack+0x2c3>
 b50:	17 c0       	rjmp	.+46     	; 0xb80 <__stack+0x321>
 b52:	fe 01       	movw	r30, r28
 b54:	31 96       	adiw	r30, 0x01	; 1
			}
			else
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 b56:	81 91       	ld	r24, Z+
 b58:	82 bb       	out	0x12, r24	; 18
					
					PORTB = 0x00;
 b5a:	18 ba       	out	0x18, r1	; 24
					PORTA = 0x00;
 b5c:	1b ba       	out	0x1b, r1	; 27
 b5e:	22 e4       	ldi	r18, 0x42	; 66
 b60:	2a 95       	dec	r18
 b62:	f1 f7       	brne	.-4      	; 0xb60 <__stack+0x301>
 b64:	00 c0       	rjmp	.+0      	; 0xb66 <__stack+0x307>
					
				}
			}
			else
			{
				for(i=0;i<4;i++)
 b66:	e0 17       	cp	r30, r16
 b68:	f1 07       	cpc	r31, r17
 b6a:	a9 f7       	brne	.-22     	; 0xb56 <__stack+0x2f7>
					PORTA = 0x00;
					
					_delay_ms(0.20);
				}
				
				draw_boundary();
 b6c:	0e 94 63 00 	call	0xc6	; 0xc6 <draw_boundary>
				draw_occupied_positions();
 b70:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <draw_occupied_positions>
 b74:	89 ef       	ldi	r24, 0xF9	; 249
 b76:	90 e0       	ldi	r25, 0x00	; 0
 b78:	01 97       	sbiw	r24, 0x01	; 1
 b7a:	f1 f7       	brne	.-4      	; 0xb78 <__stack+0x319>
 b7c:	00 c0       	rjmp	.+0      	; 0xb7e <__stack+0x31f>
 b7e:	00 00       	nop
		int8_t port_b_temp_pattern[]={
			0x00,0x80,0x80,0x00
		};
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 b80:	d3 94       	inc	r13
 b82:	9a e0       	ldi	r25, 0x0A	; 10
 b84:	d9 12       	cpse	r13, r25
 b86:	c6 cf       	rjmp	.-116    	; 0xb14 <__stack+0x2b5>
 b88:	47 c1       	rjmp	.+654    	; 0xe18 <__stack+0x5b9>
	}
	
	else if(current_player==1 && current_x==2 && current_y==3)
	{
		
		temp_col[0]=col_R[11];
 b8a:	80 91 8b 00 	lds	r24, 0x008B
 b8e:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[12];
 b90:	80 91 8c 00 	lds	r24, 0x008C
 b94:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[13];
 b96:	80 91 8d 00 	lds	r24, 0x008D
 b9a:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[14];
 b9c:	80 91 8e 00 	lds	r24, 0x008E
 ba0:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 ba2:	19 86       	std	Y+9, r1	; 0x09
 ba4:	81 e0       	ldi	r24, 0x01	; 1
 ba6:	8a 87       	std	Y+10, r24	; 0x0a
 ba8:	8b 87       	std	Y+11, r24	; 0x0b
 baa:	1c 86       	std	Y+12, r1	; 0x0c
			0x00,0x01,0x01,0x00
		};
		
		int8_t port_b_temp_pattern[]={
 bac:	1d 82       	std	Y+5, r1	; 0x05
 bae:	80 e8       	ldi	r24, 0x80	; 128
 bb0:	8e 83       	std	Y+6, r24	; 0x06
 bb2:	8f 83       	std	Y+7, r24	; 0x07
 bb4:	18 86       	std	Y+8, r1	; 0x08
			0x00,0x80,0x80,0x00
		};
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 bb6:	d1 2c       	mov	r13, r1
 bb8:	8e 01       	movw	r16, r28
 bba:	0b 5f       	subi	r16, 0xFB	; 251
 bbc:	1f 4f       	sbci	r17, 0xFF	; 255
 bbe:	78 01       	movw	r14, r16
		{
			if(loop%2==0)
 bc0:	d0 fc       	sbrc	r13, 0
 bc2:	1d c0       	rjmp	.+58     	; 0xbfe <__stack+0x39f>
 bc4:	fe 01       	movw	r30, r28
 bc6:	31 96       	adiw	r30, 0x01	; 1
 bc8:	ce 01       	movw	r24, r28
 bca:	09 96       	adiw	r24, 0x09	; 9
 bcc:	a8 01       	movw	r20, r16
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 bce:	21 91       	ld	r18, Z+
 bd0:	22 bb       	out	0x12, r18	; 18
					
					PORTB = 0x00;
 bd2:	18 ba       	out	0x18, r1	; 24
					PORTA = port_a_temp_pattern[i];
 bd4:	dc 01       	movw	r26, r24
 bd6:	2d 91       	ld	r18, X+
 bd8:	cd 01       	movw	r24, r26
 bda:	2b bb       	out	0x1b, r18	; 27
 bdc:	b3 e5       	ldi	r27, 0x53	; 83
 bde:	ba 95       	dec	r27
 be0:	f1 f7       	brne	.-4      	; 0xbde <__stack+0x37f>
 be2:	00 00       	nop
					_delay_ms(0.25);
					
					PORTA = 0x00;
 be4:	1b ba       	out	0x1b, r1	; 27
					PORTB = port_b_temp_pattern[i];
 be6:	da 01       	movw	r26, r20
 be8:	2d 91       	ld	r18, X+
 bea:	ad 01       	movw	r20, r26
 bec:	28 bb       	out	0x18, r18	; 24
 bee:	b3 e5       	ldi	r27, 0x53	; 83
 bf0:	ba 95       	dec	r27
 bf2:	f1 f7       	brne	.-4      	; 0xbf0 <__stack+0x391>
 bf4:	00 00       	nop
		int8_t loop;
		for(loop=0;loop<10;loop++)
		{
			if(loop%2==0)
			{
				for(i=0;i<4;i++)
 bf6:	ee 15       	cp	r30, r14
 bf8:	ff 05       	cpc	r31, r15
 bfa:	49 f7       	brne	.-46     	; 0xbce <__stack+0x36f>
 bfc:	17 c0       	rjmp	.+46     	; 0xc2c <__stack+0x3cd>
 bfe:	fe 01       	movw	r30, r28
 c00:	31 96       	adiw	r30, 0x01	; 1
			}
			else
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 c02:	81 91       	ld	r24, Z+
 c04:	82 bb       	out	0x12, r24	; 18
					
					PORTB = 0x00;
 c06:	18 ba       	out	0x18, r1	; 24
					PORTA = 0x00;
 c08:	1b ba       	out	0x1b, r1	; 27
 c0a:	22 e4       	ldi	r18, 0x42	; 66
 c0c:	2a 95       	dec	r18
 c0e:	f1 f7       	brne	.-4      	; 0xc0c <__stack+0x3ad>
 c10:	00 c0       	rjmp	.+0      	; 0xc12 <__stack+0x3b3>
					
				}
			}
			else
			{
				for(i=0;i<4;i++)
 c12:	e0 17       	cp	r30, r16
 c14:	f1 07       	cpc	r31, r17
 c16:	a9 f7       	brne	.-22     	; 0xc02 <__stack+0x3a3>
					PORTA = 0x00;
					
					_delay_ms(0.20);
				}
				
				draw_boundary();
 c18:	0e 94 63 00 	call	0xc6	; 0xc6 <draw_boundary>
				draw_occupied_positions();
 c1c:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <draw_occupied_positions>
 c20:	89 ef       	ldi	r24, 0xF9	; 249
 c22:	90 e0       	ldi	r25, 0x00	; 0
 c24:	01 97       	sbiw	r24, 0x01	; 1
 c26:	f1 f7       	brne	.-4      	; 0xc24 <__stack+0x3c5>
 c28:	00 c0       	rjmp	.+0      	; 0xc2a <__stack+0x3cb>
 c2a:	00 00       	nop
		int8_t port_b_temp_pattern[]={
			0x00,0x80,0x80,0x00
		};
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 c2c:	d3 94       	inc	r13
 c2e:	9a e0       	ldi	r25, 0x0A	; 10
 c30:	d9 12       	cpse	r13, r25
 c32:	c6 cf       	rjmp	.-116    	; 0xbc0 <__stack+0x361>
 c34:	f1 c0       	rjmp	.+482    	; 0xe18 <__stack+0x5b9>
				_delay_ms(1);
			}
		}
	}
	
	else if(current_player==1 && current_x==3 && current_y==1)
 c36:	80 91 91 00 	lds	r24, 0x0091
 c3a:	81 30       	cpi	r24, 0x01	; 1
 c3c:	09 f0       	breq	.+2      	; 0xc40 <__stack+0x3e1>
 c3e:	e4 c0       	rjmp	.+456    	; 0xe08 <__stack+0x5a9>
	{
		temp_col[0]=col_R[1];
 c40:	80 91 81 00 	lds	r24, 0x0081
 c44:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
 c46:	80 91 82 00 	lds	r24, 0x0082
 c4a:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
 c4c:	80 91 83 00 	lds	r24, 0x0083
 c50:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
 c52:	80 91 84 00 	lds	r24, 0x0084
 c56:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_b_temp_pattern[]={
 c58:	1d 82       	std	Y+5, r1	; 0x05
 c5a:	8c e0       	ldi	r24, 0x0C	; 12
 c5c:	8e 83       	std	Y+6, r24	; 0x06
 c5e:	8f 83       	std	Y+7, r24	; 0x07
 c60:	18 86       	std	Y+8, r1	; 0x08
		};
		
		
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 c62:	d1 2c       	mov	r13, r1
 c64:	8e 01       	movw	r16, r28
 c66:	0b 5f       	subi	r16, 0xFB	; 251
 c68:	1f 4f       	sbci	r17, 0xFF	; 255
 c6a:	78 01       	movw	r14, r16
		{
			if(loop%2==0)
 c6c:	d0 fc       	sbrc	r13, 0
 c6e:	10 c0       	rjmp	.+32     	; 0xc90 <__stack+0x431>
 c70:	fe 01       	movw	r30, r28
 c72:	31 96       	adiw	r30, 0x01	; 1
 c74:	d8 01       	movw	r26, r16
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 c76:	81 91       	ld	r24, Z+
 c78:	82 bb       	out	0x12, r24	; 18
					
					PORTA = 0x00;
 c7a:	1b ba       	out	0x1b, r1	; 27
					PORTB = port_b_temp_pattern[i];
 c7c:	8d 91       	ld	r24, X+
 c7e:	88 bb       	out	0x18, r24	; 24
 c80:	23 e5       	ldi	r18, 0x53	; 83
 c82:	2a 95       	dec	r18
 c84:	f1 f7       	brne	.-4      	; 0xc82 <__stack+0x423>
 c86:	00 00       	nop
		int8_t loop;
		for(loop=0;loop<10;loop++)
		{
			if(loop%2==0)
			{
				for(i=0;i<4;i++)
 c88:	ee 15       	cp	r30, r14
 c8a:	ff 05       	cpc	r31, r15
 c8c:	a1 f7       	brne	.-24     	; 0xc76 <__stack+0x417>
 c8e:	17 c0       	rjmp	.+46     	; 0xcbe <__stack+0x45f>
 c90:	fe 01       	movw	r30, r28
 c92:	31 96       	adiw	r30, 0x01	; 1
			}
			else
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 c94:	81 91       	ld	r24, Z+
 c96:	82 bb       	out	0x12, r24	; 18
					
					PORTB = 0x00;
 c98:	18 ba       	out	0x18, r1	; 24
					PORTA = 0x00;
 c9a:	1b ba       	out	0x1b, r1	; 27
 c9c:	82 e4       	ldi	r24, 0x42	; 66
 c9e:	8a 95       	dec	r24
 ca0:	f1 f7       	brne	.-4      	; 0xc9e <__stack+0x43f>
 ca2:	00 c0       	rjmp	.+0      	; 0xca4 <__stack+0x445>
					
				}
			}
			else
			{
				for(i=0;i<4;i++)
 ca4:	e0 17       	cp	r30, r16
 ca6:	f1 07       	cpc	r31, r17
 ca8:	a9 f7       	brne	.-22     	; 0xc94 <__stack+0x435>
					PORTA = 0x00;
					
					_delay_ms(0.20);
				}
				
				draw_boundary();
 caa:	0e 94 63 00 	call	0xc6	; 0xc6 <draw_boundary>
				draw_occupied_positions();
 cae:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <draw_occupied_positions>
 cb2:	a9 ef       	ldi	r26, 0xF9	; 249
 cb4:	b0 e0       	ldi	r27, 0x00	; 0
 cb6:	11 97       	sbiw	r26, 0x01	; 1
 cb8:	f1 f7       	brne	.-4      	; 0xcb6 <__stack+0x457>
 cba:	00 c0       	rjmp	.+0      	; 0xcbc <__stack+0x45d>
 cbc:	00 00       	nop
		};
		
		
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 cbe:	d3 94       	inc	r13
 cc0:	ba e0       	ldi	r27, 0x0A	; 10
 cc2:	db 12       	cpse	r13, r27
 cc4:	d3 cf       	rjmp	.-90     	; 0xc6c <__stack+0x40d>
 cc6:	a8 c0       	rjmp	.+336    	; 0xe18 <__stack+0x5b9>
		}
	}
	
	else if(current_player==1 && current_x==3 && current_y==2)
	{
		temp_col[0]=col_R[6];
 cc8:	80 91 86 00 	lds	r24, 0x0086
 ccc:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[7];
 cce:	80 91 87 00 	lds	r24, 0x0087
 cd2:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[8];
 cd4:	80 91 88 00 	lds	r24, 0x0088
 cd8:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[9];
 cda:	80 91 89 00 	lds	r24, 0x0089
 cde:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_b_temp_pattern[]={
 ce0:	1d 82       	std	Y+5, r1	; 0x05
 ce2:	8c e0       	ldi	r24, 0x0C	; 12
 ce4:	8e 83       	std	Y+6, r24	; 0x06
 ce6:	8f 83       	std	Y+7, r24	; 0x07
 ce8:	18 86       	std	Y+8, r1	; 0x08
		};
		
		
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 cea:	d1 2c       	mov	r13, r1
 cec:	8e 01       	movw	r16, r28
 cee:	0b 5f       	subi	r16, 0xFB	; 251
 cf0:	1f 4f       	sbci	r17, 0xFF	; 255
 cf2:	78 01       	movw	r14, r16
		{
			if(loop%2==0)
 cf4:	d0 fc       	sbrc	r13, 0
 cf6:	10 c0       	rjmp	.+32     	; 0xd18 <__stack+0x4b9>
 cf8:	fe 01       	movw	r30, r28
 cfa:	31 96       	adiw	r30, 0x01	; 1
 cfc:	d8 01       	movw	r26, r16
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 cfe:	81 91       	ld	r24, Z+
 d00:	82 bb       	out	0x12, r24	; 18
					
					PORTA = 0x00;
 d02:	1b ba       	out	0x1b, r1	; 27
					PORTB = port_b_temp_pattern[i];
 d04:	8d 91       	ld	r24, X+
 d06:	88 bb       	out	0x18, r24	; 24
 d08:	23 e5       	ldi	r18, 0x53	; 83
 d0a:	2a 95       	dec	r18
 d0c:	f1 f7       	brne	.-4      	; 0xd0a <__stack+0x4ab>
 d0e:	00 00       	nop
		int8_t loop;
		for(loop=0;loop<10;loop++)
		{
			if(loop%2==0)
			{
				for(i=0;i<4;i++)
 d10:	ee 15       	cp	r30, r14
 d12:	ff 05       	cpc	r31, r15
 d14:	a1 f7       	brne	.-24     	; 0xcfe <__stack+0x49f>
 d16:	17 c0       	rjmp	.+46     	; 0xd46 <__stack+0x4e7>
 d18:	fe 01       	movw	r30, r28
 d1a:	31 96       	adiw	r30, 0x01	; 1
			}
			else
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 d1c:	81 91       	ld	r24, Z+
 d1e:	82 bb       	out	0x12, r24	; 18
					
					PORTB = 0x00;
 d20:	18 ba       	out	0x18, r1	; 24
					PORTA = 0x00;
 d22:	1b ba       	out	0x1b, r1	; 27
 d24:	82 e4       	ldi	r24, 0x42	; 66
 d26:	8a 95       	dec	r24
 d28:	f1 f7       	brne	.-4      	; 0xd26 <__stack+0x4c7>
 d2a:	00 c0       	rjmp	.+0      	; 0xd2c <__stack+0x4cd>
					
				}
			}
			else
			{
				for(i=0;i<4;i++)
 d2c:	e0 17       	cp	r30, r16
 d2e:	f1 07       	cpc	r31, r17
 d30:	a9 f7       	brne	.-22     	; 0xd1c <__stack+0x4bd>
					PORTA = 0x00;
					
					_delay_ms(0.20);
				}
				
				draw_boundary();
 d32:	0e 94 63 00 	call	0xc6	; 0xc6 <draw_boundary>
				draw_occupied_positions();
 d36:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <draw_occupied_positions>
 d3a:	a9 ef       	ldi	r26, 0xF9	; 249
 d3c:	b0 e0       	ldi	r27, 0x00	; 0
 d3e:	11 97       	sbiw	r26, 0x01	; 1
 d40:	f1 f7       	brne	.-4      	; 0xd3e <__stack+0x4df>
 d42:	00 c0       	rjmp	.+0      	; 0xd44 <__stack+0x4e5>
 d44:	00 00       	nop
		};
		
		
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 d46:	d3 94       	inc	r13
 d48:	ba e0       	ldi	r27, 0x0A	; 10
 d4a:	db 12       	cpse	r13, r27
 d4c:	d3 cf       	rjmp	.-90     	; 0xcf4 <__stack+0x495>
 d4e:	64 c0       	rjmp	.+200    	; 0xe18 <__stack+0x5b9>
		}
	}
	
	else if(current_player==1 && current_x==3 && current_y==3)
	{
		temp_col[0]=col_R[11];
 d50:	80 91 8b 00 	lds	r24, 0x008B
 d54:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[12];
 d56:	80 91 8c 00 	lds	r24, 0x008C
 d5a:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[13];
 d5c:	80 91 8d 00 	lds	r24, 0x008D
 d60:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[14];
 d62:	80 91 8e 00 	lds	r24, 0x008E
 d66:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_b_temp_pattern[]={
 d68:	1d 82       	std	Y+5, r1	; 0x05
 d6a:	8c e0       	ldi	r24, 0x0C	; 12
 d6c:	8e 83       	std	Y+6, r24	; 0x06
 d6e:	8f 83       	std	Y+7, r24	; 0x07
 d70:	18 86       	std	Y+8, r1	; 0x08
		};
		
		
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 d72:	d1 2c       	mov	r13, r1
 d74:	8e 01       	movw	r16, r28
 d76:	0b 5f       	subi	r16, 0xFB	; 251
 d78:	1f 4f       	sbci	r17, 0xFF	; 255
 d7a:	78 01       	movw	r14, r16
		{
			if(loop%2==0)
 d7c:	d0 fc       	sbrc	r13, 0
 d7e:	10 c0       	rjmp	.+32     	; 0xda0 <__stack+0x541>
 d80:	fe 01       	movw	r30, r28
 d82:	31 96       	adiw	r30, 0x01	; 1
 d84:	d8 01       	movw	r26, r16
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 d86:	81 91       	ld	r24, Z+
 d88:	82 bb       	out	0x12, r24	; 18
					
					PORTA = 0x00;
 d8a:	1b ba       	out	0x1b, r1	; 27
					PORTB = port_b_temp_pattern[i];
 d8c:	8d 91       	ld	r24, X+
 d8e:	88 bb       	out	0x18, r24	; 24
 d90:	23 e5       	ldi	r18, 0x53	; 83
 d92:	2a 95       	dec	r18
 d94:	f1 f7       	brne	.-4      	; 0xd92 <__stack+0x533>
 d96:	00 00       	nop
		int8_t loop;
		for(loop=0;loop<10;loop++)
		{
			if(loop%2==0)
			{
				for(i=0;i<4;i++)
 d98:	ee 15       	cp	r30, r14
 d9a:	ff 05       	cpc	r31, r15
 d9c:	a1 f7       	brne	.-24     	; 0xd86 <__stack+0x527>
 d9e:	17 c0       	rjmp	.+46     	; 0xdce <__stack+0x56f>
 da0:	fe 01       	movw	r30, r28
 da2:	31 96       	adiw	r30, 0x01	; 1
			}
			else
			{
				for(i=0;i<4;i++)
				{
					PORTD = temp_col[i];
 da4:	81 91       	ld	r24, Z+
 da6:	82 bb       	out	0x12, r24	; 18
					
					PORTB = 0x00;
 da8:	18 ba       	out	0x18, r1	; 24
					PORTA = 0x00;
 daa:	1b ba       	out	0x1b, r1	; 27
 dac:	82 e4       	ldi	r24, 0x42	; 66
 dae:	8a 95       	dec	r24
 db0:	f1 f7       	brne	.-4      	; 0xdae <__stack+0x54f>
 db2:	00 c0       	rjmp	.+0      	; 0xdb4 <__stack+0x555>
					
				}
			}
			else
			{
				for(i=0;i<4;i++)
 db4:	e0 17       	cp	r30, r16
 db6:	f1 07       	cpc	r31, r17
 db8:	a9 f7       	brne	.-22     	; 0xda4 <__stack+0x545>
					PORTA = 0x00;
					
					_delay_ms(0.20);
				}
				
				draw_boundary();
 dba:	0e 94 63 00 	call	0xc6	; 0xc6 <draw_boundary>
				draw_occupied_positions();
 dbe:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <draw_occupied_positions>
 dc2:	a9 ef       	ldi	r26, 0xF9	; 249
 dc4:	b0 e0       	ldi	r27, 0x00	; 0
 dc6:	11 97       	sbiw	r26, 0x01	; 1
 dc8:	f1 f7       	brne	.-4      	; 0xdc6 <__stack+0x567>
 dca:	00 c0       	rjmp	.+0      	; 0xdcc <__stack+0x56d>
 dcc:	00 00       	nop
		};
		
		
		
		int8_t loop;
		for(loop=0;loop<10;loop++)
 dce:	d3 94       	inc	r13
 dd0:	ba e0       	ldi	r27, 0x0A	; 10
 dd2:	db 12       	cpse	r13, r27
 dd4:	d3 cf       	rjmp	.-90     	; 0xd7c <__stack+0x51d>
 dd6:	20 c0       	rjmp	.+64     	; 0xe18 <__stack+0x5b9>
				_delay_ms(1);
			}
		}
	}
	
	else if(current_player==1 && current_x==1 && current_y==2)
 dd8:	90 91 91 00 	lds	r25, 0x0091
 ddc:	92 30       	cpi	r25, 0x02	; 2
 dde:	21 f4       	brne	.+8      	; 0xde8 <__stack+0x589>
 de0:	9b cd       	rjmp	.-1226   	; 0x918 <__stack+0xb9>
				_delay_ms(1);
			}
		}
	}
	
	else if(current_player==1 && current_x==2 && current_y==1)
 de2:	82 30       	cpi	r24, 0x02	; 2
 de4:	31 f4       	brne	.+12     	; 0xdf2 <__stack+0x593>
 de6:	20 ce       	rjmp	.-960    	; 0xa28 <__stack+0x1c9>
				_delay_ms(1);
			}
		}
	}
	
	else if(current_player==1 && current_x==1 && current_y==3)
 de8:	90 91 91 00 	lds	r25, 0x0091
 dec:	93 30       	cpi	r25, 0x03	; 3
 dee:	09 f4       	brne	.+2      	; 0xdf2 <__stack+0x593>
 df0:	d7 cd       	rjmp	.-1106   	; 0x9a0 <__stack+0x141>
				_delay_ms(1);
			}
		}
	}
	
	else if(current_player==1 && current_x==3 && current_y==1)
 df2:	83 30       	cpi	r24, 0x03	; 3
 df4:	89 f4       	brne	.+34     	; 0xe18 <__stack+0x5b9>
 df6:	1f cf       	rjmp	.-450    	; 0xc36 <__stack+0x3d7>
				_delay_ms(1);
			}
		}
	}
	
	else if(current_player==1 && current_x==2 && current_y==2)
 df8:	80 91 91 00 	lds	r24, 0x0091
 dfc:	82 30       	cpi	r24, 0x02	; 2
 dfe:	09 f4       	brne	.+2      	; 0xe02 <__stack+0x5a3>
 e00:	6e ce       	rjmp	.-804    	; 0xade <__stack+0x27f>
				_delay_ms(1);
			}
		}
	}
	
	else if(current_player==1 && current_x==2 && current_y==3)
 e02:	83 30       	cpi	r24, 0x03	; 3
 e04:	49 f4       	brne	.+18     	; 0xe18 <__stack+0x5b9>
 e06:	c1 ce       	rjmp	.-638    	; 0xb8a <__stack+0x32b>
				_delay_ms(1);
			}
		}
	}
	
	else if(current_player==1 && current_x==3 && current_y==2)
 e08:	80 91 91 00 	lds	r24, 0x0091
 e0c:	82 30       	cpi	r24, 0x02	; 2
 e0e:	09 f4       	brne	.+2      	; 0xe12 <__stack+0x5b3>
 e10:	5b cf       	rjmp	.-330    	; 0xcc8 <__stack+0x469>
				_delay_ms(1);
			}
		}
	}
	
	else if(current_player==1 && current_x==3 && current_y==3)
 e12:	83 30       	cpi	r24, 0x03	; 3
 e14:	09 f4       	brne	.+2      	; 0xe18 <__stack+0x5b9>
 e16:	9c cf       	rjmp	.-200    	; 0xd50 <__stack+0x4f1>
				draw_occupied_positions();
				_delay_ms(1);
			}
		}
	}
}
 e18:	2c 96       	adiw	r28, 0x0c	; 12
 e1a:	0f b6       	in	r0, 0x3f	; 63
 e1c:	f8 94       	cli
 e1e:	de bf       	out	0x3e, r29	; 62
 e20:	0f be       	out	0x3f, r0	; 63
 e22:	cd bf       	out	0x3d, r28	; 61
 e24:	df 91       	pop	r29
 e26:	cf 91       	pop	r28
 e28:	1f 91       	pop	r17
 e2a:	0f 91       	pop	r16
 e2c:	ff 90       	pop	r15
 e2e:	ef 90       	pop	r14
 e30:	df 90       	pop	r13
 e32:	08 95       	ret

00000e34 <main>:


int main(void)
{
	
	MCUCSR = (1<<JTD);
 e34:	80 e8       	ldi	r24, 0x80	; 128
 e36:	84 bf       	out	0x34, r24	; 52
	MCUCSR = (1<<JTD);
 e38:	84 bf       	out	0x34, r24	; 52
	
	DDRA = 0xFF;
 e3a:	8f ef       	ldi	r24, 0xFF	; 255
 e3c:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xFF;
 e3e:	87 bb       	out	0x17, r24	; 23
	DDRC = 0x00;
 e40:	14 ba       	out	0x14, r1	; 20
	DDRD = 0xFF;
 e42:	81 bb       	out	0x11, r24	; 17
	
	init_control();
 e44:	0e 94 49 00 	call	0x92	; 0x92 <init_control>
		draw_boundary();
		draw_occupied_positions();
		/************************************************************************/
		/* TEST BLOCK                                                           */
		/************************************************************************/
		current_player=1;
 e48:	d1 e0       	ldi	r29, 0x01	; 1
		current_x=3;
 e4a:	c3 e0       	ldi	r28, 0x03	; 3
	init_control();
	
    while(1)
    {
        //TODO:: Please write your application code
		draw_boundary();
 e4c:	0e 94 63 00 	call	0xc6	; 0xc6 <draw_boundary>
		draw_occupied_positions();
 e50:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <draw_occupied_positions>
		/************************************************************************/
		/* TEST BLOCK                                                           */
		/************************************************************************/
		current_player=1;
 e54:	d0 93 92 00 	sts	0x0092, r29
		current_x=3;
 e58:	c0 93 90 00 	sts	0x0090, r28
		current_y=3;
 e5c:	c0 93 91 00 	sts	0x0091, r28
		/************************************************************************/
		/* END OF TEST BLOCK                                                    */
		/************************************************************************/
		draw_blinking_pattern();	
 e60:	0e 94 2a 04 	call	0x854	; 0x854 <draw_blinking_pattern>
 e64:	f3 cf       	rjmp	.-26     	; 0xe4c <main+0x18>

00000e66 <_exit>:
 e66:	f8 94       	cli

00000e68 <__stop_program>:
 e68:	ff cf       	rjmp	.-2      	; 0xe68 <__stop_program>


Boundary.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004d2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000030  00800060  000004d2  00000546  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000576  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000038  00000000  00000000  000005a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000006d9  00000000  00000000  000005de  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000021e  00000000  00000000  00000cb7  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000003d3  00000000  00000000  00000ed5  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000080  00000000  00000000  000012a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000021c  00000000  00000000  00001328  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000006e9  00000000  00000000  00001544  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000040  00000000  00000000  00001c2d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ed       	ldi	r30, 0xD2	; 210
  68:	f4 e0       	ldi	r31, 0x04	; 4
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 39       	cpi	r26, 0x90	; 144
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 3e 02 	call	0x47c	; 0x47c <main>
  7a:	0c 94 67 02 	jmp	0x4ce	; 0x4ce <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <draw_boundary>:
int8_t boundary_port_b[] = {
	0xFF,0x21,0x21,0x21,0x21,0xFF,0x21,0x21,0x21,0x21,0xFF,0x21,0x21,0x21,0x21,0xFF
};

void draw_boundary()
{
  82:	cf 93       	push	r28
  84:	df 93       	push	r29
  86:	e0 e8       	ldi	r30, 0x80	; 128
  88:	f0 e0       	ldi	r31, 0x00	; 0
  8a:	c0 e7       	ldi	r28, 0x70	; 112
  8c:	d0 e0       	ldi	r29, 0x00	; 0
  8e:	a0 e6       	ldi	r26, 0x60	; 96
  90:	b0 e0       	ldi	r27, 0x00	; 0
  92:	80 e9       	ldi	r24, 0x90	; 144
  94:	90 e0       	ldi	r25, 0x00	; 0
	int8_t i;
	for(i=0;i<16;i++)
	{
		PORTD = col_R[i];
  96:	21 91       	ld	r18, Z+
  98:	22 bb       	out	0x12, r18	; 18
		
		PORTB = 0x00;
  9a:	18 ba       	out	0x18, r1	; 24
		PORTA = boundary_port_a[i];
  9c:	29 91       	ld	r18, Y+
  9e:	2b bb       	out	0x1b, r18	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  a0:	26 ea       	ldi	r18, 0xA6	; 166
  a2:	2a 95       	dec	r18
  a4:	f1 f7       	brne	.-4      	; 0xa2 <draw_boundary+0x20>
  a6:	00 c0       	rjmp	.+0      	; 0xa8 <draw_boundary+0x26>
		_delay_ms(0.5);
		
		PORTA = 0x00;
  a8:	1b ba       	out	0x1b, r1	; 27
		PORTB = boundary_port_b[i];
  aa:	2d 91       	ld	r18, X+
  ac:	28 bb       	out	0x18, r18	; 24
  ae:	26 ea       	ldi	r18, 0xA6	; 166
  b0:	2a 95       	dec	r18
  b2:	f1 f7       	brne	.-4      	; 0xb0 <draw_boundary+0x2e>
  b4:	00 c0       	rjmp	.+0      	; 0xb6 <draw_boundary+0x34>
};

void draw_boundary()
{
	int8_t i;
	for(i=0;i<16;i++)
  b6:	e8 17       	cp	r30, r24
  b8:	f9 07       	cpc	r31, r25
  ba:	69 f7       	brne	.-38     	; 0x96 <draw_boundary+0x14>
		
		PORTA = 0x00;
		PORTB = boundary_port_b[i];
		_delay_ms(0.5);
	}
}
  bc:	df 91       	pop	r29
  be:	cf 91       	pop	r28
  c0:	08 95       	ret

000000c2 <draw_p1_pattern>:

void draw_p1_pattern(int8_t x,int8_t y)
{
  c2:	cf 93       	push	r28
  c4:	df 93       	push	r29
  c6:	cd b7       	in	r28, 0x3d	; 61
  c8:	de b7       	in	r29, 0x3e	; 62
  ca:	2c 97       	sbiw	r28, 0x0c	; 12
  cc:	0f b6       	in	r0, 0x3f	; 63
  ce:	f8 94       	cli
  d0:	de bf       	out	0x3e, r29	; 62
  d2:	0f be       	out	0x3f, r0	; 63
  d4:	cd bf       	out	0x3d, r28	; 61
	int8_t temp_col[4];
	
	int8_t i;
	
	if(x==1 && y==1)
  d6:	81 30       	cpi	r24, 0x01	; 1
  d8:	09 f0       	breq	.+2      	; 0xdc <draw_p1_pattern+0x1a>
  da:	83 c0       	rjmp	.+262    	; 0x1e2 <draw_p1_pattern+0x120>
  dc:	61 30       	cpi	r22, 0x01	; 1
  de:	19 f5       	brne	.+70     	; 0x126 <draw_p1_pattern+0x64>
	{
		
		temp_col[0]=col_R[1];
  e0:	80 91 81 00 	lds	r24, 0x0081
  e4:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
  e6:	80 91 82 00 	lds	r24, 0x0082
  ea:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
  ec:	80 91 83 00 	lds	r24, 0x0083
  f0:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
  f2:	80 91 84 00 	lds	r24, 0x0084
  f6:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
  f8:	1d 82       	std	Y+5, r1	; 0x05
  fa:	80 e3       	ldi	r24, 0x30	; 48
  fc:	8e 83       	std	Y+6, r24	; 0x06
  fe:	8f 83       	std	Y+7, r24	; 0x07
 100:	18 86       	std	Y+8, r1	; 0x08
 102:	fe 01       	movw	r30, r28
 104:	31 96       	adiw	r30, 0x01	; 1
 106:	de 01       	movw	r26, r28
 108:	15 96       	adiw	r26, 0x05	; 5
 10a:	cd 01       	movw	r24, r26
			0x00,0x30,0x30,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 10c:	21 91       	ld	r18, Z+
 10e:	22 bb       	out	0x12, r18	; 18
			
			PORTB = 0x00;
 110:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 112:	2d 91       	ld	r18, X+
 114:	2b bb       	out	0x1b, r18	; 27
 116:	23 e5       	ldi	r18, 0x53	; 83
 118:	2a 95       	dec	r18
 11a:	f1 f7       	brne	.-4      	; 0x118 <draw_p1_pattern+0x56>
 11c:	00 00       	nop
		
		int8_t port_a_temp_pattern[]={
			0x00,0x30,0x30,0x00
		};
		
		for(i=0;i<4;i++)
 11e:	e8 17       	cp	r30, r24
 120:	f9 07       	cpc	r31, r25
 122:	a1 f7       	brne	.-24     	; 0x10c <draw_p1_pattern+0x4a>
 124:	68 c1       	rjmp	.+720    	; 0x3f6 <draw_p1_pattern+0x334>
			PORTB = 0x00;
			PORTA = port_a_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	else if(x==1 && y==2)
 126:	62 30       	cpi	r22, 0x02	; 2
 128:	b1 f5       	brne	.+108    	; 0x196 <draw_p1_pattern+0xd4>
	{
		
temp_col[0]=col_R[1];
 12a:	80 91 81 00 	lds	r24, 0x0081
 12e:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
 130:	80 91 82 00 	lds	r24, 0x0082
 134:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
 136:	80 91 83 00 	lds	r24, 0x0083
 13a:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
 13c:	80 91 84 00 	lds	r24, 0x0084
 140:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 142:	19 86       	std	Y+9, r1	; 0x09
 144:	81 e0       	ldi	r24, 0x01	; 1
 146:	8a 87       	std	Y+10, r24	; 0x0a
 148:	8b 87       	std	Y+11, r24	; 0x0b
 14a:	1c 86       	std	Y+12, r1	; 0x0c
			0x00,0x01,0x01,0x00
		};
		
		int8_t port_b_temp_pattern[]={
 14c:	1d 82       	std	Y+5, r1	; 0x05
 14e:	80 e8       	ldi	r24, 0x80	; 128
 150:	8e 83       	std	Y+6, r24	; 0x06
 152:	8f 83       	std	Y+7, r24	; 0x07
 154:	18 86       	std	Y+8, r1	; 0x08
 156:	fe 01       	movw	r30, r28
 158:	31 96       	adiw	r30, 0x01	; 1
 15a:	ce 01       	movw	r24, r28
 15c:	09 96       	adiw	r24, 0x09	; 9
 15e:	be 01       	movw	r22, r28
 160:	6b 5f       	subi	r22, 0xFB	; 251
 162:	7f 4f       	sbci	r23, 0xFF	; 255
 164:	9b 01       	movw	r18, r22
			0x00,0x80,0x80,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 166:	41 91       	ld	r20, Z+
 168:	42 bb       	out	0x12, r20	; 18
			
			PORTB = 0x00;
 16a:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 16c:	dc 01       	movw	r26, r24
 16e:	4d 91       	ld	r20, X+
 170:	cd 01       	movw	r24, r26
 172:	4b bb       	out	0x1b, r20	; 27
 174:	b3 e5       	ldi	r27, 0x53	; 83
 176:	ba 95       	dec	r27
 178:	f1 f7       	brne	.-4      	; 0x176 <draw_p1_pattern+0xb4>
 17a:	00 00       	nop
			_delay_ms(0.25);
			
			PORTA = 0x00;
 17c:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 17e:	db 01       	movw	r26, r22
 180:	4d 91       	ld	r20, X+
 182:	bd 01       	movw	r22, r26
 184:	48 bb       	out	0x18, r20	; 24
 186:	b3 e5       	ldi	r27, 0x53	; 83
 188:	ba 95       	dec	r27
 18a:	f1 f7       	brne	.-4      	; 0x188 <draw_p1_pattern+0xc6>
 18c:	00 00       	nop
		
		int8_t port_b_temp_pattern[]={
			0x00,0x80,0x80,0x00
		};
		
		for(i=0;i<4;i++)
 18e:	e2 17       	cp	r30, r18
 190:	f3 07       	cpc	r31, r19
 192:	49 f7       	brne	.-46     	; 0x166 <draw_p1_pattern+0xa4>
 194:	30 c1       	rjmp	.+608    	; 0x3f6 <draw_p1_pattern+0x334>
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
			
		}
	}
	else if(x==1 && y==3)
 196:	63 30       	cpi	r22, 0x03	; 3
 198:	09 f0       	breq	.+2      	; 0x19c <draw_p1_pattern+0xda>
 19a:	2d c1       	rjmp	.+602    	; 0x3f6 <draw_p1_pattern+0x334>
	{
		temp_col[0]=col_R[1];
 19c:	80 91 81 00 	lds	r24, 0x0081
 1a0:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
 1a2:	80 91 82 00 	lds	r24, 0x0082
 1a6:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
 1a8:	80 91 83 00 	lds	r24, 0x0083
 1ac:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
 1ae:	80 91 84 00 	lds	r24, 0x0084
 1b2:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_b_temp_pattern[]={
 1b4:	1d 82       	std	Y+5, r1	; 0x05
 1b6:	8c e0       	ldi	r24, 0x0C	; 12
 1b8:	8e 83       	std	Y+6, r24	; 0x06
 1ba:	8f 83       	std	Y+7, r24	; 0x07
 1bc:	18 86       	std	Y+8, r1	; 0x08
 1be:	fe 01       	movw	r30, r28
 1c0:	31 96       	adiw	r30, 0x01	; 1
 1c2:	de 01       	movw	r26, r28
 1c4:	15 96       	adiw	r26, 0x05	; 5
 1c6:	cd 01       	movw	r24, r26
		};
		
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 1c8:	21 91       	ld	r18, Z+
 1ca:	22 bb       	out	0x12, r18	; 18
			
			PORTA = 0x00;
 1cc:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 1ce:	2d 91       	ld	r18, X+
 1d0:	28 bb       	out	0x18, r18	; 24
 1d2:	23 e5       	ldi	r18, 0x53	; 83
 1d4:	2a 95       	dec	r18
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <draw_p1_pattern+0x112>
 1d8:	00 00       	nop
		int8_t port_b_temp_pattern[]={
			0x00,0x0C,0x0C,0x00
		};
		
		
		for(i=0;i<4;i++)
 1da:	e8 17       	cp	r30, r24
 1dc:	f9 07       	cpc	r31, r25
 1de:	a1 f7       	brne	.-24     	; 0x1c8 <draw_p1_pattern+0x106>
 1e0:	0a c1       	rjmp	.+532    	; 0x3f6 <draw_p1_pattern+0x334>
			
		}
	}
	
	
	else if(x==2 && y==1)
 1e2:	82 30       	cpi	r24, 0x02	; 2
 1e4:	09 f0       	breq	.+2      	; 0x1e8 <draw_p1_pattern+0x126>
 1e6:	83 c0       	rjmp	.+262    	; 0x2ee <draw_p1_pattern+0x22c>
 1e8:	61 30       	cpi	r22, 0x01	; 1
 1ea:	19 f5       	brne	.+70     	; 0x232 <draw_p1_pattern+0x170>
	{
		temp_col[0]=col_R[6];
 1ec:	80 91 86 00 	lds	r24, 0x0086
 1f0:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[7];
 1f2:	80 91 87 00 	lds	r24, 0x0087
 1f6:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[8];
 1f8:	80 91 88 00 	lds	r24, 0x0088
 1fc:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[9];
 1fe:	80 91 89 00 	lds	r24, 0x0089
 202:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 204:	1d 82       	std	Y+5, r1	; 0x05
 206:	80 e3       	ldi	r24, 0x30	; 48
 208:	8e 83       	std	Y+6, r24	; 0x06
 20a:	8f 83       	std	Y+7, r24	; 0x07
 20c:	18 86       	std	Y+8, r1	; 0x08
 20e:	fe 01       	movw	r30, r28
 210:	31 96       	adiw	r30, 0x01	; 1
 212:	de 01       	movw	r26, r28
 214:	15 96       	adiw	r26, 0x05	; 5
 216:	cd 01       	movw	r24, r26
			0x00,0x30,0x30,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 218:	21 91       	ld	r18, Z+
 21a:	22 bb       	out	0x12, r18	; 18
			
			PORTB = 0x00;
 21c:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 21e:	2d 91       	ld	r18, X+
 220:	2b bb       	out	0x1b, r18	; 27
 222:	43 e5       	ldi	r20, 0x53	; 83
 224:	4a 95       	dec	r20
 226:	f1 f7       	brne	.-4      	; 0x224 <draw_p1_pattern+0x162>
 228:	00 00       	nop
		
		int8_t port_a_temp_pattern[]={
			0x00,0x30,0x30,0x00
		};
		
		for(i=0;i<4;i++)
 22a:	e8 17       	cp	r30, r24
 22c:	f9 07       	cpc	r31, r25
 22e:	a1 f7       	brne	.-24     	; 0x218 <draw_p1_pattern+0x156>
 230:	e2 c0       	rjmp	.+452    	; 0x3f6 <draw_p1_pattern+0x334>
			PORTB = 0x00;
			PORTA = port_a_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	else if(x==2 && y==2)
 232:	62 30       	cpi	r22, 0x02	; 2
 234:	b1 f5       	brne	.+108    	; 0x2a2 <draw_p1_pattern+0x1e0>
	{
		temp_col[0]=col_R[6];
 236:	80 91 86 00 	lds	r24, 0x0086
 23a:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[7];
 23c:	80 91 87 00 	lds	r24, 0x0087
 240:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[8];
 242:	80 91 88 00 	lds	r24, 0x0088
 246:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[9];
 248:	80 91 89 00 	lds	r24, 0x0089
 24c:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 24e:	19 86       	std	Y+9, r1	; 0x09
 250:	81 e0       	ldi	r24, 0x01	; 1
 252:	8a 87       	std	Y+10, r24	; 0x0a
 254:	8b 87       	std	Y+11, r24	; 0x0b
 256:	1c 86       	std	Y+12, r1	; 0x0c
			0x00,0x01,0x01,0x00
		};
		
		int8_t port_b_temp_pattern[]={
 258:	1d 82       	std	Y+5, r1	; 0x05
 25a:	80 e8       	ldi	r24, 0x80	; 128
 25c:	8e 83       	std	Y+6, r24	; 0x06
 25e:	8f 83       	std	Y+7, r24	; 0x07
 260:	18 86       	std	Y+8, r1	; 0x08
 262:	fe 01       	movw	r30, r28
 264:	31 96       	adiw	r30, 0x01	; 1
 266:	ce 01       	movw	r24, r28
 268:	09 96       	adiw	r24, 0x09	; 9
 26a:	be 01       	movw	r22, r28
 26c:	6b 5f       	subi	r22, 0xFB	; 251
 26e:	7f 4f       	sbci	r23, 0xFF	; 255
 270:	9b 01       	movw	r18, r22
			0x00,0x80,0x80,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 272:	41 91       	ld	r20, Z+
 274:	42 bb       	out	0x12, r20	; 18
			
			PORTB = 0x00;
 276:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 278:	dc 01       	movw	r26, r24
 27a:	4d 91       	ld	r20, X+
 27c:	cd 01       	movw	r24, r26
 27e:	4b bb       	out	0x1b, r20	; 27
 280:	b3 e5       	ldi	r27, 0x53	; 83
 282:	ba 95       	dec	r27
 284:	f1 f7       	brne	.-4      	; 0x282 <draw_p1_pattern+0x1c0>
 286:	00 00       	nop
			_delay_ms(0.25);
			
			PORTA = 0x00;
 288:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 28a:	db 01       	movw	r26, r22
 28c:	4d 91       	ld	r20, X+
 28e:	bd 01       	movw	r22, r26
 290:	48 bb       	out	0x18, r20	; 24
 292:	b3 e5       	ldi	r27, 0x53	; 83
 294:	ba 95       	dec	r27
 296:	f1 f7       	brne	.-4      	; 0x294 <draw_p1_pattern+0x1d2>
 298:	00 00       	nop
		
		int8_t port_b_temp_pattern[]={
			0x00,0x80,0x80,0x00
		};
		
		for(i=0;i<4;i++)
 29a:	e2 17       	cp	r30, r18
 29c:	f3 07       	cpc	r31, r19
 29e:	49 f7       	brne	.-46     	; 0x272 <draw_p1_pattern+0x1b0>
 2a0:	aa c0       	rjmp	.+340    	; 0x3f6 <draw_p1_pattern+0x334>
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
			
		}
	}
	else if(x==2 && y==3)
 2a2:	63 30       	cpi	r22, 0x03	; 3
 2a4:	09 f0       	breq	.+2      	; 0x2a8 <draw_p1_pattern+0x1e6>
 2a6:	a7 c0       	rjmp	.+334    	; 0x3f6 <draw_p1_pattern+0x334>
	{
		temp_col[0]=col_R[6];
 2a8:	80 91 86 00 	lds	r24, 0x0086
 2ac:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[7];
 2ae:	80 91 87 00 	lds	r24, 0x0087
 2b2:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[8];
 2b4:	80 91 88 00 	lds	r24, 0x0088
 2b8:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[9];
 2ba:	80 91 89 00 	lds	r24, 0x0089
 2be:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_b_temp_pattern[]={
 2c0:	1d 82       	std	Y+5, r1	; 0x05
 2c2:	8c e0       	ldi	r24, 0x0C	; 12
 2c4:	8e 83       	std	Y+6, r24	; 0x06
 2c6:	8f 83       	std	Y+7, r24	; 0x07
 2c8:	18 86       	std	Y+8, r1	; 0x08
 2ca:	fe 01       	movw	r30, r28
 2cc:	31 96       	adiw	r30, 0x01	; 1
 2ce:	de 01       	movw	r26, r28
 2d0:	15 96       	adiw	r26, 0x05	; 5
 2d2:	cd 01       	movw	r24, r26
		};
		
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 2d4:	21 91       	ld	r18, Z+
 2d6:	22 bb       	out	0x12, r18	; 18
			
			PORTA = 0x00;
 2d8:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 2da:	2d 91       	ld	r18, X+
 2dc:	28 bb       	out	0x18, r18	; 24
 2de:	23 e5       	ldi	r18, 0x53	; 83
 2e0:	2a 95       	dec	r18
 2e2:	f1 f7       	brne	.-4      	; 0x2e0 <draw_p1_pattern+0x21e>
 2e4:	00 00       	nop
		int8_t port_b_temp_pattern[]={
			0x00,0x0C,0x0C,0x00
		};
		
		
		for(i=0;i<4;i++)
 2e6:	e8 17       	cp	r30, r24
 2e8:	f9 07       	cpc	r31, r25
 2ea:	a1 f7       	brne	.-24     	; 0x2d4 <draw_p1_pattern+0x212>
 2ec:	84 c0       	rjmp	.+264    	; 0x3f6 <draw_p1_pattern+0x334>
			
		}
	}
	
	
	else if(x==3 && y==1)
 2ee:	83 30       	cpi	r24, 0x03	; 3
 2f0:	09 f0       	breq	.+2      	; 0x2f4 <draw_p1_pattern+0x232>
 2f2:	81 c0       	rjmp	.+258    	; 0x3f6 <draw_p1_pattern+0x334>
 2f4:	61 30       	cpi	r22, 0x01	; 1
 2f6:	19 f5       	brne	.+70     	; 0x33e <draw_p1_pattern+0x27c>
	{
		temp_col[0]=col_R[11];
 2f8:	80 91 8b 00 	lds	r24, 0x008B
 2fc:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[12];
 2fe:	80 91 8c 00 	lds	r24, 0x008C
 302:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[13];
 304:	80 91 8d 00 	lds	r24, 0x008D
 308:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[14];
 30a:	80 91 8e 00 	lds	r24, 0x008E
 30e:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 310:	1d 82       	std	Y+5, r1	; 0x05
 312:	80 e3       	ldi	r24, 0x30	; 48
 314:	8e 83       	std	Y+6, r24	; 0x06
 316:	8f 83       	std	Y+7, r24	; 0x07
 318:	18 86       	std	Y+8, r1	; 0x08
 31a:	fe 01       	movw	r30, r28
 31c:	31 96       	adiw	r30, 0x01	; 1
 31e:	de 01       	movw	r26, r28
 320:	15 96       	adiw	r26, 0x05	; 5
 322:	cd 01       	movw	r24, r26
			0x00,0x30,0x30,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 324:	21 91       	ld	r18, Z+
 326:	22 bb       	out	0x12, r18	; 18
			
			PORTB = 0x00;
 328:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 32a:	2d 91       	ld	r18, X+
 32c:	2b bb       	out	0x1b, r18	; 27
 32e:	43 e5       	ldi	r20, 0x53	; 83
 330:	4a 95       	dec	r20
 332:	f1 f7       	brne	.-4      	; 0x330 <draw_p1_pattern+0x26e>
 334:	00 00       	nop
		
		int8_t port_a_temp_pattern[]={
			0x00,0x30,0x30,0x00
		};
		
		for(i=0;i<4;i++)
 336:	e8 17       	cp	r30, r24
 338:	f9 07       	cpc	r31, r25
 33a:	a1 f7       	brne	.-24     	; 0x324 <draw_p1_pattern+0x262>
 33c:	5c c0       	rjmp	.+184    	; 0x3f6 <draw_p1_pattern+0x334>
			PORTB = 0x00;
			PORTA = port_a_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
	else if(x==3 && y==2)
 33e:	62 30       	cpi	r22, 0x02	; 2
 340:	b1 f5       	brne	.+108    	; 0x3ae <draw_p1_pattern+0x2ec>
	{
		temp_col[0]=col_R[11];
 342:	80 91 8b 00 	lds	r24, 0x008B
 346:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[12];
 348:	80 91 8c 00 	lds	r24, 0x008C
 34c:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[13];
 34e:	80 91 8d 00 	lds	r24, 0x008D
 352:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[14];
 354:	80 91 8e 00 	lds	r24, 0x008E
 358:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 35a:	19 86       	std	Y+9, r1	; 0x09
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	8a 87       	std	Y+10, r24	; 0x0a
 360:	8b 87       	std	Y+11, r24	; 0x0b
 362:	1c 86       	std	Y+12, r1	; 0x0c
			0x00,0x01,0x01,0x00
		};
		
		int8_t port_b_temp_pattern[]={
 364:	1d 82       	std	Y+5, r1	; 0x05
 366:	80 e8       	ldi	r24, 0x80	; 128
 368:	8e 83       	std	Y+6, r24	; 0x06
 36a:	8f 83       	std	Y+7, r24	; 0x07
 36c:	18 86       	std	Y+8, r1	; 0x08
 36e:	fe 01       	movw	r30, r28
 370:	31 96       	adiw	r30, 0x01	; 1
 372:	ce 01       	movw	r24, r28
 374:	09 96       	adiw	r24, 0x09	; 9
 376:	be 01       	movw	r22, r28
 378:	6b 5f       	subi	r22, 0xFB	; 251
 37a:	7f 4f       	sbci	r23, 0xFF	; 255
 37c:	9b 01       	movw	r18, r22
			0x00,0x80,0x80,0x00
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 37e:	41 91       	ld	r20, Z+
 380:	42 bb       	out	0x12, r20	; 18
			
			PORTB = 0x00;
 382:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 384:	dc 01       	movw	r26, r24
 386:	4d 91       	ld	r20, X+
 388:	cd 01       	movw	r24, r26
 38a:	4b bb       	out	0x1b, r20	; 27
 38c:	b3 e5       	ldi	r27, 0x53	; 83
 38e:	ba 95       	dec	r27
 390:	f1 f7       	brne	.-4      	; 0x38e <draw_p1_pattern+0x2cc>
 392:	00 00       	nop
			_delay_ms(0.25);
			
			PORTA = 0x00;
 394:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 396:	db 01       	movw	r26, r22
 398:	4d 91       	ld	r20, X+
 39a:	bd 01       	movw	r22, r26
 39c:	48 bb       	out	0x18, r20	; 24
 39e:	b3 e5       	ldi	r27, 0x53	; 83
 3a0:	ba 95       	dec	r27
 3a2:	f1 f7       	brne	.-4      	; 0x3a0 <draw_p1_pattern+0x2de>
 3a4:	00 00       	nop
		
		int8_t port_b_temp_pattern[]={
			0x00,0x80,0x80,0x00
		};
		
		for(i=0;i<4;i++)
 3a6:	e2 17       	cp	r30, r18
 3a8:	f3 07       	cpc	r31, r19
 3aa:	49 f7       	brne	.-46     	; 0x37e <draw_p1_pattern+0x2bc>
 3ac:	24 c0       	rjmp	.+72     	; 0x3f6 <draw_p1_pattern+0x334>
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
			
		}
	}
	else if(x==3 && y==3)
 3ae:	63 30       	cpi	r22, 0x03	; 3
 3b0:	11 f5       	brne	.+68     	; 0x3f6 <draw_p1_pattern+0x334>
	{
		temp_col[0]=col_R[11];
 3b2:	80 91 8b 00 	lds	r24, 0x008B
 3b6:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[12];
 3b8:	80 91 8c 00 	lds	r24, 0x008C
 3bc:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[13];
 3be:	80 91 8d 00 	lds	r24, 0x008D
 3c2:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[14];
 3c4:	80 91 8e 00 	lds	r24, 0x008E
 3c8:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_b_temp_pattern[]={
 3ca:	1d 82       	std	Y+5, r1	; 0x05
 3cc:	8c e0       	ldi	r24, 0x0C	; 12
 3ce:	8e 83       	std	Y+6, r24	; 0x06
 3d0:	8f 83       	std	Y+7, r24	; 0x07
 3d2:	18 86       	std	Y+8, r1	; 0x08
 3d4:	fe 01       	movw	r30, r28
 3d6:	31 96       	adiw	r30, 0x01	; 1
 3d8:	de 01       	movw	r26, r28
 3da:	15 96       	adiw	r26, 0x05	; 5
 3dc:	cd 01       	movw	r24, r26
		};
		
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 3de:	21 91       	ld	r18, Z+
 3e0:	22 bb       	out	0x12, r18	; 18
			
			PORTA = 0x00;
 3e2:	1b ba       	out	0x1b, r1	; 27
			PORTB = port_b_temp_pattern[i];
 3e4:	2d 91       	ld	r18, X+
 3e6:	28 bb       	out	0x18, r18	; 24
 3e8:	23 e5       	ldi	r18, 0x53	; 83
 3ea:	2a 95       	dec	r18
 3ec:	f1 f7       	brne	.-4      	; 0x3ea <draw_p1_pattern+0x328>
 3ee:	00 00       	nop
		int8_t port_b_temp_pattern[]={
			0x00,0x0C,0x0C,0x00
		};
		
		
		for(i=0;i<4;i++)
 3f0:	e8 17       	cp	r30, r24
 3f2:	f9 07       	cpc	r31, r25
 3f4:	a1 f7       	brne	.-24     	; 0x3de <draw_p1_pattern+0x31c>
			PORTB = port_b_temp_pattern[i];
			_delay_ms(0.25);
			
		}
	}
}
 3f6:	2c 96       	adiw	r28, 0x0c	; 12
 3f8:	0f b6       	in	r0, 0x3f	; 63
 3fa:	f8 94       	cli
 3fc:	de bf       	out	0x3e, r29	; 62
 3fe:	0f be       	out	0x3f, r0	; 63
 400:	cd bf       	out	0x3d, r28	; 61
 402:	df 91       	pop	r29
 404:	cf 91       	pop	r28
 406:	08 95       	ret

00000408 <draw_p2_pattern>:

void draw_p2_pattern(int8_t x,int8_t y)
{
 408:	cf 93       	push	r28
 40a:	df 93       	push	r29
 40c:	cd b7       	in	r28, 0x3d	; 61
 40e:	de b7       	in	r29, 0x3e	; 62
 410:	28 97       	sbiw	r28, 0x08	; 8
 412:	0f b6       	in	r0, 0x3f	; 63
 414:	f8 94       	cli
 416:	de bf       	out	0x3e, r29	; 62
 418:	0f be       	out	0x3f, r0	; 63
 41a:	cd bf       	out	0x3d, r28	; 61
	int8_t temp_col[4];
	
	int8_t i;
	
	if(x==1 && y==1)
 41c:	81 30       	cpi	r24, 0x01	; 1
 41e:	29 f5       	brne	.+74     	; 0x46a <draw_p2_pattern+0x62>
 420:	61 30       	cpi	r22, 0x01	; 1
 422:	19 f5       	brne	.+70     	; 0x46a <draw_p2_pattern+0x62>
	{
		
		temp_col[0]=col_R[1];
 424:	80 91 81 00 	lds	r24, 0x0081
 428:	89 83       	std	Y+1, r24	; 0x01
		temp_col[1]=col_R[2];
 42a:	80 91 82 00 	lds	r24, 0x0082
 42e:	8a 83       	std	Y+2, r24	; 0x02
		temp_col[2]=col_R[3];
 430:	80 91 83 00 	lds	r24, 0x0083
 434:	8b 83       	std	Y+3, r24	; 0x03
		temp_col[3]=col_R[4];
 436:	80 91 84 00 	lds	r24, 0x0084
 43a:	8c 83       	std	Y+4, r24	; 0x04
		
		int8_t port_a_temp_pattern[]={
 43c:	80 e3       	ldi	r24, 0x30	; 48
 43e:	8d 83       	std	Y+5, r24	; 0x05
 440:	98 e4       	ldi	r25, 0x48	; 72
 442:	9e 83       	std	Y+6, r25	; 0x06
 444:	9f 83       	std	Y+7, r25	; 0x07
 446:	88 87       	std	Y+8, r24	; 0x08
 448:	fe 01       	movw	r30, r28
 44a:	31 96       	adiw	r30, 0x01	; 1
 44c:	de 01       	movw	r26, r28
 44e:	15 96       	adiw	r26, 0x05	; 5
 450:	cd 01       	movw	r24, r26
			0x30,0x48,0x48,0x30
		};
		
		for(i=0;i<4;i++)
		{
			PORTD = temp_col[i];
 452:	21 91       	ld	r18, Z+
 454:	22 bb       	out	0x12, r18	; 18
			
			PORTB = 0x00;
 456:	18 ba       	out	0x18, r1	; 24
			PORTA = port_a_temp_pattern[i];
 458:	2d 91       	ld	r18, X+
 45a:	2b bb       	out	0x1b, r18	; 27
 45c:	23 e5       	ldi	r18, 0x53	; 83
 45e:	2a 95       	dec	r18
 460:	f1 f7       	brne	.-4      	; 0x45e <draw_p2_pattern+0x56>
 462:	00 00       	nop
		
		int8_t port_a_temp_pattern[]={
			0x30,0x48,0x48,0x30
		};
		
		for(i=0;i<4;i++)
 464:	e8 17       	cp	r30, r24
 466:	f9 07       	cpc	r31, r25
 468:	a1 f7       	brne	.-24     	; 0x452 <draw_p2_pattern+0x4a>
			PORTB = 0x00;
			PORTA = port_a_temp_pattern[i];
			_delay_ms(0.25);
		}
	}
}
 46a:	28 96       	adiw	r28, 0x08	; 8
 46c:	0f b6       	in	r0, 0x3f	; 63
 46e:	f8 94       	cli
 470:	de bf       	out	0x3e, r29	; 62
 472:	0f be       	out	0x3f, r0	; 63
 474:	cd bf       	out	0x3d, r28	; 61
 476:	df 91       	pop	r29
 478:	cf 91       	pop	r28
 47a:	08 95       	ret

0000047c <main>:

int main(void)
{
	
	MCUCSR = (1<<JTD);
 47c:	80 e8       	ldi	r24, 0x80	; 128
 47e:	84 bf       	out	0x34, r24	; 52
	MCUCSR = (1<<JTD);
 480:	84 bf       	out	0x34, r24	; 52
	
	DDRA = 0xFF;
 482:	8f ef       	ldi	r24, 0xFF	; 255
 484:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xFF;
 486:	87 bb       	out	0x17, r24	; 23
	DDRC = 0x00;
 488:	14 ba       	out	0x14, r1	; 20
	DDRD = 0xFF;
 48a:	81 bb       	out	0x11, r24	; 17
		draw_p1_pattern(2,2);
		draw_p1_pattern(2,3);
		*/
		int8_t test_loop_i;
		
		for(test_loop_i=1;test_loop_i<=3;test_loop_i++)
 48c:	ee 24       	eor	r14, r14
 48e:	e3 94       	inc	r14
		}
	}
}

int main(void)
{
 490:	0e 2d       	mov	r16, r14
 492:	68 94       	set
 494:	ff 24       	eor	r15, r15
 496:	f1 f8       	bld	r15, 1
	DDRD = 0xFF;
	
    while(1)
    {
        //TODO:: Please write your application code
		draw_boundary();
 498:	0e 94 41 00 	call	0x82	; 0x82 <draw_boundary>
		draw_p1_pattern(2,2);
		draw_p1_pattern(2,3);
		*/
		int8_t test_loop_i;
		
		for(test_loop_i=1;test_loop_i<=3;test_loop_i++)
 49c:	ce 2d       	mov	r28, r14
 49e:	14 c0       	rjmp	.+40     	; 0x4c8 <main+0x4c>
 4a0:	df 5f       	subi	r29, 0xFF	; 255
 4a2:	1f 5f       	subi	r17, 0xFF	; 255
 4a4:	61 2f       	mov	r22, r17
		{
			int8_t test_loop_j;
			for(test_loop_j=1;test_loop_j<=3;test_loop_j++)
			{
				if(test_loop_i==1 && test_loop_j==1)
 4a6:	c1 30       	cpi	r28, 0x01	; 1
 4a8:	39 f4       	brne	.+14     	; 0x4b8 <main+0x3c>
 4aa:	11 30       	cpi	r17, 0x01	; 1
 4ac:	29 f4       	brne	.+10     	; 0x4b8 <main+0x3c>
					draw_p2_pattern(1,1);
 4ae:	60 2f       	mov	r22, r16
 4b0:	80 2f       	mov	r24, r16
 4b2:	0e 94 04 02 	call	0x408	; 0x408 <draw_p2_pattern>
 4b6:	f4 cf       	rjmp	.-24     	; 0x4a0 <main+0x24>
				else
					draw_p1_pattern(test_loop_i,test_loop_j);
 4b8:	8c 2f       	mov	r24, r28
 4ba:	0e 94 61 00 	call	0xc2	; 0xc2 <draw_p1_pattern>
		int8_t test_loop_i;
		
		for(test_loop_i=1;test_loop_i<=3;test_loop_i++)
		{
			int8_t test_loop_j;
			for(test_loop_j=1;test_loop_j<=3;test_loop_j++)
 4be:	d4 30       	cpi	r29, 0x04	; 4
 4c0:	7c f3       	brlt	.-34     	; 0x4a0 <main+0x24>
		draw_p1_pattern(2,2);
		draw_p1_pattern(2,3);
		*/
		int8_t test_loop_i;
		
		for(test_loop_i=1;test_loop_i<=3;test_loop_i++)
 4c2:	cf 5f       	subi	r28, 0xFF	; 255
 4c4:	c4 30       	cpi	r28, 0x04	; 4
 4c6:	41 f3       	breq	.-48     	; 0x498 <main+0x1c>
		}
	}
}

int main(void)
{
 4c8:	10 2f       	mov	r17, r16
 4ca:	df 2d       	mov	r29, r15
 4cc:	eb cf       	rjmp	.-42     	; 0x4a4 <main+0x28>

000004ce <_exit>:
 4ce:	f8 94       	cli

000004d0 <__stop_program>:
 4d0:	ff cf       	rjmp	.-2      	; 0x4d0 <__stop_program>

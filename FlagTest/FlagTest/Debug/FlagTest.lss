
FlagTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000104  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  00000104  00000178  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000188  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  000001b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000001f4  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 00000144  00000000  00000000  000003cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000191  00000000  00000000  00000510  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  000006a4  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000018a  00000000  00000000  000006c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000000f1  00000000  00000000  00000852  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00000943  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
   c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
  50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e4 e0       	ldi	r30, 0x04	; 4
  68:	f1 e0       	ldi	r31, 0x01	; 1
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 37       	cpi	r26, 0x70	; 112
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>
  76:	0e 94 41 00 	call	0x82	; 0x82 <main>
  7a:	0c 94 80 00 	jmp	0x100	; 0x100 <_exit>

0000007e <__bad_interrupt>:
  7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <main>:
	0x3C , 0x3C , 0x24 , 0x24 , 0x24 , 0x24 , 0x3c , 0x3c
};

int main(void)
{
	DDRA = 0xFF;
  82:	8f ef       	ldi	r24, 0xFF	; 255
  84:	8a bb       	out	0x1a, r24	; 26
	DDRB = 0xFF;
  86:	87 bb       	out	0x17, r24	; 23
	DDRC = 0xFF;
  88:	84 bb       	out	0x14, r24	; 20
	DDRD = 0xFF;
  8a:	81 bb       	out	0x11, r24	; 17
	
    while(1)
    {
		int8_t i;
		
		for(i=0;i<8;i++)
  8c:	60 e0       	ldi	r22, 0x00	; 0
			
			_delay_ms(1);
		}
		
		_delay_ms(20);
		PORTB = 0xFF;
  8e:	7f ef       	ldi	r23, 0xFF	; 255
	
    while(1)
    {
		int8_t i;
		
		for(i=0;i<8;i++)
  90:	a0 e0       	ldi	r26, 0x00	; 0
		{
			int8_t temp = ~(1<<i);
  92:	41 e0       	ldi	r20, 0x01	; 1
  94:	50 e0       	ldi	r21, 0x00	; 0
  96:	27 c0       	rjmp	.+78     	; 0xe6 <main+0x64>
  98:	86 2f       	mov	r24, r22
  9a:	99 27       	eor	r25, r25
  9c:	87 fd       	sbrc	r24, 7
  9e:	90 95       	com	r25
  a0:	9a 01       	movw	r18, r20
  a2:	06 2e       	mov	r0, r22
  a4:	02 c0       	rjmp	.+4      	; 0xaa <main+0x28>
  a6:	22 0f       	add	r18, r18
  a8:	33 1f       	adc	r19, r19
  aa:	0a 94       	dec	r0
  ac:	e2 f7       	brpl	.-8      	; 0xa6 <main+0x24>
  ae:	20 95       	com	r18
			
			PORTB = temp;
  b0:	28 bb       	out	0x18, r18	; 24
			PORTD = 0xFF;
  b2:	72 bb       	out	0x12, r23	; 18
			PORTA = green[i];
  b4:	fc 01       	movw	r30, r24
  b6:	e0 5a       	subi	r30, 0xA0	; 160
  b8:	ff 4f       	sbci	r31, 0xFF	; 255
  ba:	30 81       	ld	r19, Z
  bc:	3b bb       	out	0x1b, r19	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  be:	e9 ef       	ldi	r30, 0xF9	; 249
  c0:	f0 e0       	ldi	r31, 0x00	; 0
  c2:	31 97       	sbiw	r30, 0x01	; 1
  c4:	f1 f7       	brne	.-4      	; 0xc2 <main+0x40>
  c6:	00 c0       	rjmp	.+0      	; 0xc8 <main+0x46>
  c8:	00 00       	nop
			_delay_ms(1);
			
			PORTD = temp;
  ca:	22 bb       	out	0x12, r18	; 18
			PORTB = 0xFF;
  cc:	78 bb       	out	0x18, r23	; 24
			PORTA = red[i];
  ce:	fc 01       	movw	r30, r24
  d0:	e8 59       	subi	r30, 0x98	; 152
  d2:	ff 4f       	sbci	r31, 0xFF	; 255
  d4:	80 81       	ld	r24, Z
  d6:	8b bb       	out	0x1b, r24	; 27
  d8:	89 ef       	ldi	r24, 0xF9	; 249
  da:	90 e0       	ldi	r25, 0x00	; 0
  dc:	01 97       	sbiw	r24, 0x01	; 1
  de:	f1 f7       	brne	.-4      	; 0xdc <main+0x5a>
  e0:	00 c0       	rjmp	.+0      	; 0xe2 <main+0x60>
  e2:	00 00       	nop
	
    while(1)
    {
		int8_t i;
		
		for(i=0;i<8;i++)
  e4:	6f 5f       	subi	r22, 0xFF	; 255
  e6:	68 30       	cpi	r22, 0x08	; 8
  e8:	bc f2       	brlt	.-82     	; 0x98 <main+0x16>
  ea:	e7 e8       	ldi	r30, 0x87	; 135
  ec:	f3 e1       	ldi	r31, 0x13	; 19
  ee:	31 97       	sbiw	r30, 0x01	; 1
  f0:	f1 f7       	brne	.-4      	; 0xee <main+0x6c>
  f2:	00 c0       	rjmp	.+0      	; 0xf4 <main+0x72>
  f4:	00 00       	nop
			
			_delay_ms(1);
		}
		
		_delay_ms(20);
		PORTB = 0xFF;
  f6:	78 bb       	out	0x18, r23	; 24
		PORTD = 0x00;
  f8:	12 ba       	out	0x12, r1	; 18
		PORTA = 0x00;
  fa:	1b ba       	out	0x1b, r1	; 27
	
    while(1)
    {
		int8_t i;
		
		for(i=0;i<8;i++)
  fc:	6a 2f       	mov	r22, r26
		
		_delay_ms(20);
		PORTB = 0xFF;
		PORTD = 0x00;
		PORTA = 0x00;
    }
  fe:	f3 cf       	rjmp	.-26     	; 0xe6 <main+0x64>

00000100 <_exit>:
 100:	f8 94       	cli

00000102 <__stop_program>:
 102:	ff cf       	rjmp	.-2      	; 0x102 <__stop_program>
